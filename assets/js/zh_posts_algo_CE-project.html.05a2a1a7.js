"use strict";(self.webpackChunkpersonalweb=self.webpackChunkpersonalweb||[]).push([[4869],{3272:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>t});var n=a(641);const l={},e=(0,a(6262).A)(l,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<h1 id="ce-project" tabindex="-1"><a class="header-anchor" href="#ce-project"><span>CE project</span></a></h1><h2 id="jwt" tabindex="-1"><a class="header-anchor" href="#jwt"><span>JWT</span></a></h2><h3 id="_1-🔑-jwt存储在哪里" tabindex="-1"><a class="header-anchor" href="#_1-🔑-jwt存储在哪里"><span>1. 🔑 JWT存储在哪里？</span></a></h3><p><strong>客户端存储</strong>：</p><ul><li>JWT <strong>不存储在服务器端</strong>（这是JWT的特点之一）</li><li>JWT由<strong>客户端</strong>（前端）负责存储，常见方式： <ul><li><code>localStorage</code> - 持久化存储</li><li><code>sessionStorage</code> - 会话存储</li><li><code>Memory</code> - 内存存储（最安全，但刷新页面会丢失）</li><li><code>HttpOnly Cookie</code> - 相对安全的方式</li></ul></li></ul><p><strong>服务器端</strong>：</p><ul><li>服务器只在<strong>黑名单</strong>中存储已登出的token</li><li>黑名单存储在<strong>Redis</strong>中，key格式：<code>jwt:blacklist:{token}</code></li></ul><h3 id="_2-🚪-登出时jwt如何处理" tabindex="-1"><a class="header-anchor" href="#_2-🚪-登出时jwt如何处理"><span>2. 🚪 登出时JWT如何处理？</span></a></h3><p>根据你的代码，登出流程如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 1. 客户端发送登出请求，携带JWT token</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">POST </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">auth</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">logout</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Authorization</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Bearer {jwt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">token}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 2. 服务器处理登出</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">PostMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/logout&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Void</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> logout</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HttpServletRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> request) {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> token </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> extractTokenFromRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(request)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 提取token</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (token </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        authService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">logout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(token);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 调用登出服务</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Constants</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">LOGOUT_SUCCESS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 3. 将token加入Redis黑名单</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> logout</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> token) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> remainingTime </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> jwtUtil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getRemainingTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(token);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 获取剩余有效时间</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (remainingTime </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        tokenBlacklistService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addToBlacklist</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(token, remainingTime);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 加入黑名单</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>登出机制</strong>：</p><ul><li>✅ 将token加入<strong>Redis黑名单</strong>，存储时间为token的剩余有效期</li><li>✅ 后续请求会检查黑名单，已登出的token将被拒绝访问</li><li>✅ 客户端需要<strong>删除本地存储的token</strong></li></ul><h3 id="_3-⏰-jwt存在时间多久" tabindex="-1"><a class="header-anchor" href="#_3-⏰-jwt存在时间多久"><span>3. ⏰ JWT存在时间多久？</span></a></h3><p>根据你的配置文件：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jwt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Access Token 过期时间 (小时)</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  access-token-expiration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">24</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Refresh Token 过期时间 (天)  </span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  refresh-token-expiration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Token生存时间</strong>：</p><ul><li><strong>Access Token</strong>: <strong>24小时</strong>（用于API访问）</li><li><strong>Refresh Token</strong>: <strong>7天</strong>（用于刷新Access Token）</li></ul><p><strong>Token刷新机制</strong>：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 使用refresh token获取新的access token</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">POST </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">auth</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">refresh</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;refreshToken&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;your-refresh-token&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 返回新的token对</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;accessToken&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;new-access-token&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;refreshToken&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;new-refresh-token&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> </span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;expiresIn&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 86400</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 24小时(秒)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🛡️-安全建议" tabindex="-1"><a class="header-anchor" href="#🛡️-安全建议"><span>🛡️ 安全建议</span></a></h3><ol><li><p><strong>客户端存储</strong>：</p><ul><li>推荐使用<code>httpOnly cookie</code>存储refresh token</li><li>Access token可存储在内存中</li><li>避免在<code>localStorage</code>中存储敏感token</li></ul></li><li><p><strong>Token刷新</strong>：</p><ul><li>Access token过期前自动刷新</li><li>Refresh token使用一次后立即更新（你的代码已实现）</li></ul></li><li><p><strong>登出清理</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 前端登出时需要清理</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">localStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">removeItem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;accessToken&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">localStorage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">removeItem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;refreshToken&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 或者清空所有认证相关数据</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>你的JWT实现已经很完善了，包含了Token黑名单、自动刷新等安全机制！</p><h2 id="重置密码流程" tabindex="-1"><a class="header-anchor" href="#重置密码流程"><span>重置密码流程</span></a></h2><h3 id="🔄-用户操作流程" tabindex="-1"><a class="header-anchor" href="#🔄-用户操作流程"><span>🔄 用户操作流程</span></a></h3><ol><li><p><strong>用户在登录页面点击&quot;忘记密码&quot;</strong></p><ul><li>跳转到忘记密码页面</li><li>输入邮箱：<code>user@example.com</code></li><li>点击&quot;发送重置邮件&quot;</li></ul></li><li><p><strong>前端调用忘记密码接口</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">POST</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">auth</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">forgot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">password</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;email&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;user@example.com&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>用户看到提示信息</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&quot;如果该邮箱已注册，您将收到密码重置邮件&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>用户检查邮箱，收到重置邮件</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>标题：CE-Wombat 密码重置请求</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>亲爱的 user，</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>您收到此邮件是因为有人请求重置您的 CE-Wombat 账户密码。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>如果这是您本人的操作，请点击以下链接重置密码：</span></span>\n<span class="line"><span>http://localhost:3000/reset-password?token=abcd-1234-efgh-5678</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>此链接将在30分钟后失效。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>用户点击邮件中的链接</strong></p><ul><li>浏览器打开：<code>http://localhost:3000/reset-password?token=abcd-1234-efgh-5678</code></li><li>前端从URL获取token参数</li><li>显示重置密码表单</li></ul></li><li><p><strong>用户在重置密码页面输入新密码</strong></p><ul><li>输入新密码：<code>newPassword123</code></li><li>确认密码：<code>newPassword123</code></li><li>点击&quot;重置密码&quot;</li></ul></li><li><p><strong>前端调用重置密码接口</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">POST</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">auth</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">reset</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">password</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;token&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;abcd-1234-efgh-5678&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;newPassword&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;newPassword123&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;confirmPassword&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;newPassword123&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>密码重置成功</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&quot;密码重置成功&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>用户可以用新密码登录了</li></ul></li></ol><h3 id="🎯-关键点总结" tabindex="-1"><a class="header-anchor" href="#🎯-关键点总结"><span>🎯 关键点总结</span></a></h3><ul><li><strong>第一个接口</strong>：处理&quot;发送重置邮件&quot;的请求</li><li><strong>邮件链接</strong>：连接两个步骤的桥梁（包含token）</li><li><strong>第二个接口</strong>：处理&quot;实际重置密码&quot;的请求</li></ul><p>就像你说的，<strong>先忘记密码 → 邮件收到 → 点进去 → 重置密码</strong>，这是一个完整的安全链条！🔗</p><p>这样设计确保了：</p><ol><li>✅ 只有邮箱拥有者能收到重置链接</li><li>✅ 只有点击邮件链接的人能重置密码</li><li>✅ 令牌有时效性，防止滥用</li><li>✅ 整个过程安全可控</li></ol><h2 id="邮件" tabindex="-1"><a class="header-anchor" href="#邮件"><span>邮件</span></a></h2><h3 id="_1-邮件发送" tabindex="-1"><a class="header-anchor" href="#_1-邮件发送"><span>1. 邮件发送</span></a></h3><p>https://myaccount.google.com/apppasswords</p>',33)]))}]]),t=JSON.parse('{"path":"/zh/posts/algo/CE-project.html","title":"CE project","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-08-25T00:00:00.000Z","category":["Learning Records"],"tag":["Notes"],"description":"CE project JWT 1. 🔑 JWT存储在哪里？ 客户端存储： JWT 不存储在服务器端（这是JWT的特点之一） JWT由客户端（前端）负责存储，常见方式： localStorage - 持久化存储 sessionStorage - 会话存储 Memory - 内存存储（最安全，但刷新页面会丢失） HttpOnly Cookie - 相对安...","head":[["meta",{"property":"og:url","content":"https://crc011220.github.io/zh/posts/algo/CE-project.html"}],["meta",{"property":"og:site_name","content":"Ruochen Chen"}],["meta",{"property":"og:title","content":"CE project"}],["meta",{"property":"og:description","content":"CE project JWT 1. 🔑 JWT存储在哪里？ 客户端存储： JWT 不存储在服务器端（这是JWT的特点之一） JWT由客户端（前端）负责存储，常见方式： localStorage - 持久化存储 sessionStorage - 会话存储 Memory - 内存存储（最安全，但刷新页面会丢失） HttpOnly Cookie - 相对安..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-24T22:40:04.000Z"}],["meta",{"property":"article:tag","content":"Notes"}],["meta",{"property":"article:published_time","content":"2025-08-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-24T22:40:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CE project\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-25T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-24T22:40:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ruochen Chen\\"}]}"]]},"headers":[{"level":2,"title":"JWT","slug":"jwt","link":"#jwt","children":[{"level":3,"title":"1. 🔑 JWT存储在哪里？","slug":"_1-🔑-jwt存储在哪里","link":"#_1-🔑-jwt存储在哪里","children":[]},{"level":3,"title":"2. 🚪 登出时JWT如何处理？","slug":"_2-🚪-登出时jwt如何处理","link":"#_2-🚪-登出时jwt如何处理","children":[]},{"level":3,"title":"3. ⏰ JWT存在时间多久？","slug":"_3-⏰-jwt存在时间多久","link":"#_3-⏰-jwt存在时间多久","children":[]},{"level":3,"title":"🛡️ 安全建议","slug":"🛡️-安全建议","link":"#🛡️-安全建议","children":[]}]},{"level":2,"title":"重置密码流程","slug":"重置密码流程","link":"#重置密码流程","children":[{"level":3,"title":"🔄 用户操作流程","slug":"🔄-用户操作流程","link":"#🔄-用户操作流程","children":[]},{"level":3,"title":"🎯 关键点总结","slug":"🎯-关键点总结","link":"#🎯-关键点总结","children":[]}]},{"level":2,"title":"邮件","slug":"邮件","link":"#邮件","children":[{"level":3,"title":"1. 邮件发送","slug":"_1-邮件发送","link":"#_1-邮件发送","children":[]}]}],"git":{"createdTime":1756075204000,"updatedTime":1756075204000,"contributors":[{"name":"Ruochen Chen","email":"ruocchen1220@gmail.com","commits":1}]},"readingTime":{"minutes":3.37,"words":1010},"filePathRelative":"zh/posts/algo/CE-project.md","localizedDate":"2025年8月25日","excerpt":"\\n<h2>JWT</h2>\\n<h3>1. 🔑 JWT存储在哪里？</h3>\\n<p><strong>客户端存储</strong>：</p>\\n<ul>\\n<li>JWT <strong>不存储在服务器端</strong>（这是JWT的特点之一）</li>\\n<li>JWT由<strong>客户端</strong>（前端）负责存储，常见方式：\\n<ul>\\n<li><code>localStorage</code> - 持久化存储</li>\\n<li><code>sessionStorage</code> - 会话存储</li>\\n<li><code>Memory</code> - 内存存储（最安全，但刷新页面会丢失）</li>\\n<li><code>HttpOnly Cookie</code> - 相对安全的方式</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}')},6262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}}}]);