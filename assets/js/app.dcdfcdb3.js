"use strict";(self.webpackChunkpersonalweb=self.webpackChunkpersonalweb||[]).push([[3524],{1709:(s,i,e)=>{e.d(i,{l:()=>n});const n={category:{"/":{path:"/category/",map:{Genesis:{path:"/category/genesis/",indexes:[0,1]},"Learning Records":{path:"/category/learning-records/",indexes:[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97]},"Internship journal":{path:"/category/internship-journal/",indexes:[98,99,100,101,102,103,104,105,106]}}},"/zh/":{path:"/zh/category/",map:{开始:{path:"/zh/category/%E5%BC%80%E5%A7%8B/",indexes:[107,108]},学习笔记:{path:"/zh/category/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",indexes:[109,110,111,112,113]},"Learning Records":{path:"/zh/category/learning-records/",indexes:[114]}}}},tag:{"/":{path:"/tag/",map:{Resume:{path:"/tag/resume/",indexes:[1]},"AWS SAA":{path:"/tag/aws-saa/",indexes:[28,56]},LeetCode:{path:"/tag/leetcode/",indexes:[10,53,54,67,71,79,84,92,94,97]},"Algorithm Practices":{path:"/tag/algorithm-practices/",indexes:[29,30,32,33,34,36,38,40,44,45,49]},"Programmer cliché":{path:"/tag/programmer-clich%C3%A9/",indexes:[2,4,21,22,55,59,64,68,70,72,76,80,85,93,95]},"China Merchant Bank":{path:"/tag/china-merchant-bank/",indexes:[98,99,100,101,102,103,104,105,106]},Docker:{path:"/tag/docker/",indexes:[3]},Dubbo:{path:"/tag/dubbo/",indexes:[14,15]},ES:{path:"/tag/es/",indexes:[9,35]},"Technical Interview":{path:"/tag/technical-interview/",indexes:[41,42,43,46,47,48,50,51,52]},Istio:{path:"/tag/istio/",indexes:[13]},MyBatis:{path:"/tag/mybatis/",indexes:[37,39]},React:{path:"/tag/react/",indexes:[18,31]},NextJS:{path:"/tag/nextjs/",indexes:[20,23,24,25,27]},Javascript:{path:"/tag/javascript/",indexes:[26]},Nginx:{path:"/tag/nginx/",indexes:[11,12]},Typescript:{path:"/tag/typescript/",indexes:[16,17,19]},Unimelb:{path:"/tag/unimelb/",indexes:[5,6,7,8,96]},Kubernetes:{path:"/tag/kubernetes/",indexes:[57,58,60,61,62,63,65,66,69,73,74,75,77,78,81,82,83,86,87,88,89,90,91]}}},"/zh/":{path:"/zh/tag/",map:{简历:{path:"/zh/tag/%E7%AE%80%E5%8E%86/",indexes:[108]},旅程:{path:"/zh/tag/%E6%97%85%E7%A8%8B/",indexes:[107]},java8:{path:"/zh/tag/java8/",indexes:[113]},nio:{path:"/zh/tag/nio/",indexes:[112]},netty:{path:"/zh/tag/netty/",indexes:[109,110,111]},Nginx:{path:"/zh/tag/nginx/",indexes:[114]}}}}}},4776:(s,i,e)=>{e.d(i,{M:()=>n});const n=["/posts/genesis.html","/intro.html","/posts/clich%C3%A9/15.html","/posts/docker/1.html","/posts/clich%C3%A9/14.html","/posts/unimelb/2.html","/posts/unimelb/3.html","/posts/unimelb/4.html","/posts/unimelb/5.html","/posts/elasticsearch/2.html","/posts/algorithm/21.html","/posts/nginx/2.html","/posts/nginx/1.html","/posts/istio/1.html","/posts/dubbo/2.html","/posts/dubbo/1.html","/posts/typescript/3.html","/posts/typescript/2.html","/posts/nextjs/8.html","/posts/typescript/1.html","/posts/nextjs/7.html","/posts/clich%C3%A9/12.html","/posts/clich%C3%A9/13.html","/posts/nextjs/4.html","/posts/nextjs/5.html","/posts/nextjs/6.html","/posts/nextjs/3.html","/posts/nextjs/2.html","/posts/aws-saa/2.html","/posts/algorithm/19.html","/posts/algorithm/20.html","/posts/nextjs/1.html","/posts/algorithm/18.html","/posts/algorithm/17.html","/posts/algorithm/16.html","/posts/elasticsearch/1.html","/posts/algorithm/15.html","/posts/mybatis/2.html","/posts/algorithm/14.html","/posts/mybatis/1.html","/posts/algorithm/13.html","/posts/interview/8.html","/posts/interview/9.html","/posts/interview/7.html","/posts/algorithm/12.html","/posts/algorithm/11.html","/posts/interview/4.html","/posts/interview/5.html","/posts/interview/6.html","/posts/algorithm/10.html","/posts/interview/2.html","/posts/interview/3.html","/posts/interview/1.html","/posts/algorithm/9.html","/posts/algorithm/8.html","/posts/clich%C3%A9/11.html","/posts/aws-saa/1.html","/posts/kubernetes/microsvc/1.html","/posts/kubernetes/practices/15.html","/posts/clich%C3%A9/10.html","/posts/kubernetes/practices/11.html","/posts/kubernetes/practices/12.html","/posts/kubernetes/practices/13.html","/posts/kubernetes/practices/14.html","/posts/clich%C3%A9/9.html","/posts/kubernetes/practices/10.html","/posts/kubernetes/practices/9.html","/posts/algorithm/7.html","/posts/clich%C3%A9/8.html","/posts/kubernetes/practices/8.html","/posts/clich%C3%A9/7.html","/posts/algorithm/6.html","/posts/clich%C3%A9/6.html","/posts/kubernetes/practices/5.html","/posts/kubernetes/practices/6.html","/posts/kubernetes/practices/7.html","/posts/clich%C3%A9/5.html","/posts/kubernetes/concepts/7.html","/posts/kubernetes/practices/4.html","/posts/algorithm/5.html","/posts/clich%C3%A9/4.html","/posts/kubernetes/practices/1.html","/posts/kubernetes/practices/2.html","/posts/kubernetes/practices/3.html","/posts/algorithm/4.html","/posts/clich%C3%A9/3.html","/posts/kubernetes/concepts/1.html","/posts/kubernetes/concepts/2.html","/posts/kubernetes/concepts/3.html","/posts/kubernetes/concepts/4.html","/posts/kubernetes/concepts/5.html","/posts/kubernetes/concepts/6.html","/posts/algorithm/3.html","/posts/clich%C3%A9/2.html","/posts/algorithm/2.html","/posts/clich%C3%A9/1.html","/posts/unimelb/1.html","/posts/algorithm/1.html","/posts/cmb/9.html","/posts/cmb/8.html","/posts/cmb/7.html","/posts/cmb/6.html","/posts/cmb/5.html","/posts/cmb/4.html","/posts/cmb/3.html","/posts/cmb/2.html","/posts/cmb/1.html","/zh/posts/genesis.html","/zh/intro.html","/zh/posts/netty/Netty04-%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html","/zh/posts/netty/Netty03-%E8%BF%9B%E9%98%B6.html","/zh/posts/netty/Netty02-intro.html","/zh/posts/netty/Netty01-nio.html","/zh/posts/java8/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B.html","/zh/posts/nginx/1.html","/posts/aws-saa/3.html"]},3781:(s,i,e)=>{e.d(i,{U:()=>n});const n={article:{"/":{path:"/article/",indexes:[0,1,115,2,3,4,5,6,7,8,9,10,11,12,13,14,15,98,99,100,101,102,16,17,103,18,19,20,21,22,104,23,24,25,26,105,27,28,29,30,31,32,33,106,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97]},"/zh/":{path:"/zh/article/",indexes:[107,108,114,109,110,111,112,113]}},star:{"/":{path:"/star/",indexes:[1]},"/zh/":{path:"/zh/star/",indexes:[108]}},timeline:{"/":{path:"/timeline/",indexes:[115,2,3,4,5,6,7,8,9,10,11,12,13,14,15,98,99,100,101,102,16,17,103,18,19,20,21,22,104,23,24,25,26,105,27,28,29,30,31,32,33,106,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,0,1]},"/zh/":{path:"/zh/timeline/",indexes:[114,109,110,111,112,113,107,108]}}}},1286:(s,i,e)=>{e.d(i,{B:()=>O});var n={};e.r(n);var a={};e.r(a);var t={};e.r(t),e.d(t,{default:()=>y});var l={};e.r(l);var h={};e.r(h),e.d(h,{default:()=>D});var r={};e.r(r),e.d(r,{default:()=>S});var p={};e.r(p),e.d(p,{default:()=>j});var d={};e.r(d),e.d(d,{default:()=>z});var k=e(2402),o=e(3073),c=e(9403),g=e(596),m=e(8831);const y={enhance:({app:s})=>{(0,k.L4)("FontIcon")||s.component("FontIcon",c.A),(0,k.L4)("Badge")||s.component("Badge",g.A),(0,k.L4)("VPCard")||s.component("VPCard",m.A)},setup:()=>{(0,o.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,o.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,o.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]};var u=e(6358),A=e(3827),b=e(355),B=e(1599),v=e(8913),C=e(457),F=e(3349),f=e(1781),E=e(9212);const D={enhance:({app:s})=>{s.component("CodeTabs",f.S),s.component("Tabs",E.t)}};var w=e(8031),x=e(3027);const S={enhance:({app:s})=>{s.component("CodeDemo",w.A),s.component("MdDemo",x.A)}};var L=e(5753),q=e(5054),I=e(783),P=e(8465),T=e(641),N=e(7107),R=e(9920);(0,P.M_)((s=>{const i=s.t,e=!1!==s.I,n=s.i;return e?{title:i,content:n?()=>[(0,T.h)(I.GB,{icon:n}),i]:null,order:s.O,index:s.I}:null}));const j={enhance:({app:s,router:i})=>{const{scrollBehavior:e}=i.options;i.options.scrollBehavior=async(...s)=>(await I.lE.wait(),e(...s)),(0,I.fk)(s),s.component("HopeIcon",I.GB),s.component("BloggerInfo",N.tI),s.component("SocialMedias",N.rS),s.component("GlobalEncrypt",R.J),s.component("LocalEncrypt",R.n)},setup:()=>{(0,I.PV)(),(0,I.i$)(),(0,N.su)()},layouts:{Layout:I.PE,NotFound:I.Mk,BlogCategory:N.Pn,BlogHome:N.qX,BlogType:N.z7,Timeline:N.Kf}};var M=e(9540);const z={enhance({app:s}){(0,M.wn)(s),s.component("SearchBox",M.VA)}},O=[n,a,t,u,A,b,B,v,C,F,l,h,r,L,q,p,d].map((s=>s.default)).filter(Boolean)},8164:(s,i,e)=>{e.d(i,{J:()=>a,c:()=>n});const n=JSON.parse("{}"),a=Object.fromEntries([["/",{loader:()=>e.e(4470).then(e.bind(e,8701)),meta:{t:"Richard Chen's Blog",i:"home"}}],["/intro.html",{loader:()=>e.e(3912).then(e.bind(e,881)),meta:{d:17304192e5,l:"November 1, 2024",c:["Genesis"],g:["Resume"],u:!0,v:"/assets/images/unimelb-feit-logo.png",e:'\n<h1>Richard Chen</h1>\n<ul>\n<li>Email: <a href="mailto:ruocchen1220@gmail.com" target="_blank" rel="noopener noreferrer">ruocchen1220@gmail.com</a></li>\n<li>Phone: +61 0478396285</li>\n<li>Location: Melbourne, 3000</li>\n</ul>\n<hr>\n<h2>EDUCATION</h2>\n<p><strong>Master of Information Technology, Specializing in Computing</strong><br>\n<em>The University of Melbourne</em><br>\n<em>Feb 2024 - Dec 2025</em><br>\n<em>Relevant Courses</em>: Programming and Software Development, Internet Technology, Algorithms and Complexity, Database Systems and Information Modelling, Distributed Systems, Software Process and Management, Machine Learning, Cluster and Cloud Computing, Declarative Programming, Information Visualization, Mobile Computing Systems Programming</p>',r:{minutes:3.48,words:1043},t:"About Me",i:"circle-info",y:"a"}}],["/posts/genesis.html",{loader:()=>e.e(908).then(e.bind(e,5682)),meta:{d:17305056e5,l:"November 2, 2024",c:["Genesis"],u:!0,e:"\n<p>Welcome to my blog! This is where my journey to start recording the world of programming begins 🎉</p>\n<h2>Purpose of This Blog</h2>\n<p>In this blog, I will document my course learning records, showcase my projects, and share my personal reflections on my experiences in programming. My aim is to create a space for learning and sharing knowledge with fellow enthusiasts.</p>",r:{minutes:.41,words:122},t:"Genesis",i:"pen-to-square",y:"a"}}],["/zh/",{loader:()=>e.e(2814).then(e.bind(e,5762)),meta:{t:"主页",i:"home"}}],["/zh/intro.html",{loader:()=>e.e(787).then(e.bind(e,58)),meta:{d:17304192e5,l:"2024年11月1日",c:["开始"],g:["简历"],u:!0,v:"/assets/images/unimelb-feit-logo.png",e:'\n<h2>陈若尘</h2>\n<ul>\n<li>邮箱: <a href="mailto:ruocchen1220@gmail.com" target="_blank" rel="noopener noreferrer">ruocchen1220@gmail.com</a></li>\n<li>电话: +86 13738337771</li>\n<li>位置: 墨尔本, 3000</li>\n</ul>\n<hr>\n<h2>教育背景</h2>\n<p><strong>信息技术硕士，计算机方向</strong><br>\n<em>墨尔本大学</em><br>\n<em>2024年2月 - 2025年12月</em><br>\n<em>相关课程</em>: 编程与软件开发、互联网技术、算法与复杂度、数据库系统与信息建模、分布式系统、软件过程与管理、机器学习、集群与云计算</p>',r:{minutes:4.73,words:1419},t:"关于我",i:"circle-info",y:"a"}}],["/posts/aws-saa/1.html",{loader:()=>e.e(513).then(e.bind(e,3744)),meta:{d:17315424e5,l:"November 14, 2024",c:["Learning Records"],g:["AWS SAA"],e:"\n<h2>Question1</h2>\n<p>An application runs on an Amazon EC2 instance in a VPC. The application processes logs that are stored in an Amazon S3 bucket. The EC2 instance needs to access the S3 bucket without connectivity to the internet.<br>\nWhich solution will provide private network connectivity to Amazon S3?</p>",r:{minutes:31.11,words:9333},t:"AWS Solution Architect Associate Part 1:",i:"pen-to-square",y:"a"}}],["/posts/aws-saa/2.html",{loader:()=>e.e(7596).then(e.bind(e,8542)),meta:{d:17334432e5,l:"December 6, 2024",c:["Learning Records"],g:["AWS SAA"],e:"\n<h2>Question 21</h2>\n<p>To develop a two-tier web application on AWS where the company's developers have deployed the application on an Amazon EC2 instance that connects directly to a backend Amazon RDS database, the following solution meets the requirements with the least operational overhead:</p>",r:{minutes:7.42,words:2226},t:"AWS Solution Architect Associate Part 2:",i:"pen-to-square",y:"a"}}],["/posts/aws-saa/3.html",{loader:()=>e.e(6179).then(e.bind(e,2719)),meta:{d:1741263855e3,t:"",y:"a"}}],["/posts/algorithm/1.html",{loader:()=>e.e(1111).then(e.bind(e,9036)),meta:{d:1730592e6,l:"November 3, 2024",c:["Learning Records"],g:["LeetCode"],e:'\n<h2>Longest Substring Without Repeating Characters</h2>\n<p>Given a string <code>s</code>, find the length of the longest substring without repeating characters.</p>\n<h2>Approach: Sliding Window</h2>\n<p>To solve this problem efficiently, we can use a sliding window approach. This technique involves maintaining a "window" of characters within the string that does not contain any duplicates. As we iterate through the string, we adjust the window size to maximize the length of the substring with unique characters.</p>',r:{minutes:1.26,words:379},t:"Question 3",i:"pen-to-square",y:"a"}}],["/posts/algorithm/10.html",{loader:()=>e.e(2467).then(e.bind(e,1938)),meta:{d:17319744e5,l:"November 19, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<p>Calculate the number of the prime numbers in a given range N.</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> eratosthenes</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">        boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] isNotPrime </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[n]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //false represents a prime number</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">isNotPrime[i]){ </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//is prime number</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                //for(int j=2*i; j&lt;n; j+=i){//j是合数标记位置 j+=i因为要从2*i 3*i 4*i 逐渐递增。但是在这个循环不好直接修改i</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i){</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//无需从2*i开始，因为如果是2*i的话，比如i=2的时候会计算2*4，i=4的时候也会从2*4开始，这样就重复了</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                    isNotPrime[j] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> //标记这些合数 label composite number</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.6,words:179},t:"Eratosthenes",i:"pen-to-square",y:"a"}}],["/posts/algorithm/11.html",{loader:()=>e.e(3884).then(e.bind(e,8055)),meta:{d:17321472e5,l:"November 21, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> sqrt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">binarySearch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">24</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//4</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">newton</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">24</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//4</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> binarySearch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> index</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> left</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, right </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> x;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(left </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> right){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> left </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (right </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> left) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(mid </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mid </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> x){</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mid;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                left </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mid </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                right </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mid </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> index;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> newton</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sqrt1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(x,x);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> double</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sqrt1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">double</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        double</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> res</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">i)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(res </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sqrt1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(res, x);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.38,words:114},t:"Find the Integer sqrt",i:"pen-to-square",y:"a"}}],["/posts/algorithm/12.html",{loader:()=>e.e(6801).then(e.bind(e,7839)),meta:{d:17322336e5,l:"November 22, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<h3>e.g. input: 1-2-3 output: 3-2-1</h3>\n<h2>Iteration</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ListNode</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reverseList</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> head) {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> preNode </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> currNode </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(currNode </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /*因为下面要把currNode的next改为指向preNode</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        * 为了不丢失本来的结点指向，所以所以需要事先保存一下*/</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> currNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        currNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> preNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /*移动双指针*/</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        preNode </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> currNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        currNode </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> preNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.69,words:207},t:"Reverse a linkedList",i:"pen-to-square",y:"a"}}],["/posts/algorithm/13.html",{loader:()=>e.e(9370).then(e.bind(e,9675)),meta:{d:17324064e5,l:"November 24, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<h3>The product cannot go beyond the int_MAX</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sort</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // O(n log n)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> nums[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> nums[n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">], nums[n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> nums[n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> nums[n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.58,words:174},t:"The biggest product of three numbers",i:"pen-to-square",y:"a"}}],["/posts/algorithm/14.html",{loader:()=>e.e(4295).then(e.bind(e,6867)),meta:{d:17328384e5,l:"November 29, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<h3>Recursion</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fibonacci</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">       return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">   }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">       return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">   }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fibonacci</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fibonacci</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.56,words:167},t:"Fibonacci",i:"pen-to-square",y:"a"}}],["/posts/algorithm/15.html",{loader:()=>e.e(5072).then(e.bind(e,3256)),meta:{d:17329248e5,l:"November 30, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> hasCycle</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> head) {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListNode</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> set </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(head)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 如果添加失败，说明已经存在该节点，即存在环</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 遍历完整个链表，没有发现重复节点，说明不存在环</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.56,words:169},t:"Cycle linkedList",i:"pen-to-square",y:"a"}}],["/posts/algorithm/16.html",{loader:()=>e.e(9061).then(e.bind(e,9778)),meta:{d:17330112e5,l:"December 1, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/*双指针逆序处理，时间复杂度来为O(m+n)，空间复杂度为O(1)*/</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mergeFastLessSpace</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">nums1Index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">nums2Index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums1Index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/*nums1已经取完，完全取nums2的值即可*/</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            nums1[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums2[nums2Index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums2Index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/*nums2已经取完，完全取nums1的值即可*/</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums1[nums1Index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums2[nums2Index]){</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/*nums1的元素值大于nums2，取nums1值*/</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            nums1[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums1[nums1Index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">{</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/*nums2的元素值大于等于nums1，取nums2的值*/</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            nums1[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums2[nums2Index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.54,words:162},t:"Combine two sequenced arrays",i:"pen-to-square",y:"a"}}],["/posts/algorithm/17.html",{loader:()=>e.e(8638).then(e.bind(e,4586)),meta:{d:17330976e5,l:"December 2, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<h3>DFS</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> maxDepth</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">TreeNode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> root) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (root </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">maxDepth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">left</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">maxDepth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">right</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.38,words:115},t:"The max depth of a binary tree",i:"pen-to-square",y:"a"}}],["/posts/algorithm/18.html",{loader:()=>e.e(8923).then(e.bind(e,2936)),meta:{d:1733184e6,l:"December 3, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findLengthOfLCIS</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> maxLength </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 最长连续递增子序列的长度至少为1</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> currentLength </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 当前连续递增子序列的长度</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]) { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 如果当前元素大于前一个元素</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            currentLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 增加当前连续递增子序列的长度</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            maxLength </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(maxLength, currentLength);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 更新最大长度</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            currentLength </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 重置当前连续递增子序列的长度</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> maxLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 返回最长连续递增子序列的长度</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.52,words:157},t:"Longest Continuous Increasing Subsequence, LCIS",i:"pen-to-square",y:"a"}}],["/posts/algorithm/19.html",{loader:()=>e.e(2084).then(e.bind(e,9972)),meta:{d:17333568e5,l:"December 5, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:"\n<p>The Knuth-Morris-Pratt (KMP) algorithm is an efficient string matching algorithm that searches for occurrences of a pattern within a text. It improves upon the naive approach by avoiding unnecessary comparisons, using information gathered from previous comparisons to skip sections of the text.</p>",r:{minutes:.72,words:216},t:"KMP Algorithm",i:"pen-to-square",y:"a"}}],["/posts/algorithm/2.html",{loader:()=>e.e(7230).then(e.bind(e,6090)),meta:{d:17306784e5,l:"November 4, 2024",c:["Learning Records"],g:["LeetCode"],e:'\n<h2>Longest Palindromic Substring</h2>\n<p>Given a string <code>s</code>, return the longest palindromic substring in <code>s</code>.</p>\n<h2>Approach: Expand Around Center</h2>\n<p>To find the longest palindromic substring efficiently, we can use the "Expand Around Center" technique. A palindrome mirrors around its center, so for each character in the string, we can consider it as the center and try to expand outwards in both directions to find the longest palindrome. We need to check both odd-length and even-length palindromes by treating each character and each pair of characters as potential centers.</p>',r:{minutes:1.42,words:425},t:"Question 5",i:"pen-to-square",y:"a"}}],["/posts/algorithm/20.html",{loader:()=>e.e(3856).then(e.bind(e,6479)),meta:{d:17333568e5,l:"December 5, 2024",c:["Learning Records"],g:["Algorithm Practices"],e:"\n<h2>Quorum</h2>\n<p>在 N 个副本中，一次更新成功的如果有 W 个，那么我在读取数据时是要从大于 N－W 个副本中读取，这样就能至少读到一个更新的数据了。\nQuorum 是分布式系统中常用的一种机制，用来保证数据冗余和最终一致性的投票算法，在 Paxos、Raft 和 ZooKeeper 的 Zab 等算法中，都可以看到 Quorum 机制的应用。</p>\n<h2>Paxos</h2>\n<ul>\n<li>Proposer: 提出提案 (Proposal)。Proposal信息包括提案编号 (Proposal ID) 和提议的值 (Value)。</li>\n<li>Acceptor: 参与决策，回应Proposers的提案。在集群中，Acceptor 有 N 个，Acceptor 之间完全对等独立， Proposer 提出的 value 必须获得超过半数（N/2+1）的 Acceptor 批准后才能通过。</li>\n<li>Learner: 不参与决策，从Proposers/Acceptors学习最新达成一致的提案（Value）Proposer 和 Acceptor 是算法核心角色，Paxos 描述的就是在一个由多个 Proposer 和多个 Acceptor 构成的系统中，如何让多个 Acceptor 针对 Proposer 提出的多种提案达成一致的过程，而 Learner 只是“学习”最终被批准的提案。\n</li>\n</ul>",r:{minutes:2.31,words:693},t:"Distributed Consistency Algorithms",i:"pen-to-square",y:"a"}}],["/posts/algorithm/21.html",{loader:()=>e.e(6951).then(e.bind(e,5100)),meta:{d:17407008e5,l:"February 28, 2025",c:["Learning Records"],g:["LeetCode"],e:"\n<h2>LRU Cache</h2>\n<p>Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: <code>get(key)</code> and <code>put(key, value)</code>.</p>\n<p><code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.</p>",r:{minutes:2.34,words:702},t:"Question 146",i:"pen-to-square",y:"a"}}],["/posts/algorithm/3.html",{loader:()=>e.e(981).then(e.bind(e,9306)),meta:{d:17307648e5,l:"November 5, 2024",c:["Learning Records"],g:["LeetCode"],e:"\n<h2>Palindrome Number Problem</h2>\n<h2>Approach: Converting Half of The Numbers</h2>\n<p>This solution checks if an integer <code>x</code> is a palindrome by reversing half of the digits and comparing them.</p>\n<h3>Steps:</h3>\n<ol>\n<li>\n<p><strong>Handle Special Cases</strong>:</p>\n<ul>\n<li>If <code>x</code> is negative, return <code>false</code> since negative numbers cannot be palindromes.</li>\n<li>If <code>x</code> ends in 0 and is not 0 itself, return <code>false</code> because the first digit of a palindrome cannot be 0 (except for the number 0).</li>\n</ul>\n</li>\n<li>\n<p><strong>Reverse Half of the Number</strong>:</p>\n<ul>\n<li>Initialize <code>revertedNumber</code> to 0.</li>\n<li>Reverse the last half of the digits by continuously moving the last digit of <code>x</code> to <code>revertedNumber</code> until <code>x</code> is no longer greater than <code>revertedNumber</code>.</li>\n</ul>\n</li>\n<li>\n<p><strong>Check for Palindrome</strong>:</p>\n<ul>\n<li>After the loop, <code>x</code> should either be equal to <code>revertedNumber</code> (for even-length palindromes) or <code>revertedNumber / 10</code> (for odd-length palindromes, where the middle digit does not need to be compared).</li>\n</ul>\n</li>\n<li>\n<p><strong>Complexity</strong></p>\n<ul>\n<li><strong>Time Complexity</strong>: O(log₁₀(n)), as the number of digits is reduced by half.</li>\n<li><strong>Space Complexity</strong>: O(1), using constant extra space.</li>\n</ul>\n</li>\n</ol>",r:{minutes:1.09,words:326},t:"Question 9",i:"pen-to-square",y:"a"}}],["/posts/algorithm/4.html",{loader:()=>e.e(2220).then(e.bind(e,3215)),meta:{d:17308512e5,l:"November 6, 2024",c:["Learning Records"],g:["LeetCode"],e:"\n<h2>Longest Common Prefix</h2>\n<p>The Longest Common Prefix (LCP) problem involves finding the longest prefix that is common to all the strings in a given array of strings. The <strong>horizontal scanning</strong> approach is one of the simplest ways to solve this.</p>\n<h2>Approach: Horizontal Scanning</h2>",r:{minutes:.9,words:270},t:"Question 14",i:"pen-to-square",y:"a"}}],["/posts/algorithm/5.html",{loader:()=>e.e(2227).then(e.bind(e,2764)),meta:{d:17309376e5,l:"November 7, 2024",c:["Learning Records"],g:["LeetCode"],e:"\n<h2>Three Sum Problem</h2>\n<p>Given an integer array <code>nums</code>, return all the unique triplets <code>[nums[i], nums[j], nums[k]]</code> such that:</p>\n<ul>\n<li><code>i != j</code>, <code>i != k</code>, <code>j != k</code></li>\n<li><code>nums[i] + nums[j] + nums[k] == 0</code></li>\n</ul>\n<hr>",r:{minutes:1.53,words:460},t:"Question 15",i:"pen-to-square",y:"a"}}],["/posts/algorithm/6.html",{loader:()=>e.e(3418).then(e.bind(e,8390)),meta:{d:17311104e5,l:"November 9, 2024",c:["Learning Records"],g:["LeetCode"],e:"\n<h2>Letter Combinations of a Phone Number</h2>\n<p>Given a string containing digits from <code>2-9</code>, return all possible letter combinations that the number could represent. Each digit corresponds to a set of letters on a traditional telephone keypad.</p>\n<h3>Approach: DFS</h3>\n<p>We can use Depth First Search (DFS) to explore all possible letter combinations by treating each digit as a level in a decision tree, where each branch corresponds to one of the letters mapped to that digit.</p>",r:{minutes:1.64,words:492},t:"Question 17",i:"pen-to-square",y:"a"}}],["/posts/algorithm/7.html",{loader:()=>e.e(9201).then(e.bind(e,9105)),meta:{d:17312832e5,l:"November 11, 2024",c:["Learning Records"],g:["LeetCode"],e:"\n<h2>Delete the Nth Node from the End of the Linked List</h2>\n<p>Given the head of a linked list, remove the Nth node from the end of the list and return its head.</p>\n<h2>Approach: Two-Pointer Technique</h2>\n<ol>\n<li><strong>Initialize two pointers</strong>, <code>first</code> and <code>second</code>, both pointing to the head of the list.</li>\n<li><strong>Advance <code>first</code> pointer</strong> by N nodes. This creates a gap of N nodes between <code>first</code> and <code>second</code>.</li>\n<li><strong>Move both pointers</strong> until <code>first</code> reaches the end. Now, <code>second</code> will be pointing to the node just before the Nth node from the end.</li>\n<li><strong>Remove the target node</strong> by updating the <code>next</code> pointer of <code>second</code>.</li>\n<li><strong>Return the head</strong> of the modified list.</li>\n</ol>",r:{minutes:.78,words:235},t:"Question 19",i:"pen-to-square",y:"a"}}],["/posts/algorithm/8.html",{loader:()=>e.e(5496).then(e.bind(e,9295)),meta:{d:17316288e5,l:"November 15, 2024",c:["Learning Records"],g:["LeetCode"],e:"\n<h2>Swap Nodes in Pairs</h2>\n<p>Given a linked list, swap every two adjacent nodes and return its head. You must solve it using recursion.</p>\n<h2>Approach: Recursion</h2>\n<ol>\n<li><strong>Base Case</strong>: If the list is empty or has only one node, return the <code>head</code> as no swapping is needed.</li>\n<li><strong>Recursive Step</strong>: Recursively solve the problem for the remaining nodes (i.e., after the first pair), then swap the first two nodes.</li>\n<li><strong>Return New Head</strong>: The new head of the list after the swap will be the second node in the first pair.</li>\n</ol>",r:{minutes:.78,words:234},t:"Question 24",i:"pen-to-square",y:"a"}}],["/posts/algorithm/9.html",{loader:()=>e.e(3759).then(e.bind(e,112)),meta:{d:17318016e5,l:"November 17, 2024",c:["Learning Records"],g:["LeetCode"],e:"\n<h2>Delete the Repeating Item in a Sorted Array</h2>\n<p>We need to achieve this within <strong>Space Complexity O(1)</strong>.</p>\n<h3>Approach: Double Pointer Technique</h3>\n<p>To solve the problem of deleting repeating items in a sorted array, we can use a <strong>two-pointer technique</strong>. Since the array is sorted, duplicates will appear consecutively, allowing us to easily remove them by using two pointers: one for tracking the unique elements and another for iterating through the array.</p>",r:{minutes:1.23,words:370},t:"Question 26",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/1.html",{loader:()=>e.e(3452).then(e.bind(e,4500)),meta:{d:17306784e5,l:"November 4, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<h3>In Spring Framework, <code>@Autowired</code> and <code>@Resource</code> are both annotations used for dependency injection, but they have some key differences in terms of usage and behavior.</h3>\n<h3>Injection by Type vs. Name</h3>\n<ul>\n<li><strong>@Autowired</strong>: Injects by type.</li>\n<li><strong>@Resource</strong>: Injects by name (with fallback to type).</li>\n</ul>",r:{minutes:.33,words:100},t:"Differences between @Autowired and @Resource",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/10.html",{loader:()=>e.e(8554).then(e.bind(e,7032)),meta:{d:1731456e6,l:"November 13, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<p>Pessimistic Locking and Optimistic Locking are two common concurrency control strategies used to handle data consistency issues when multiple threads or processes access shared resources. The main difference between them lies in their approach to handling resource contention.</p>\n<h2>1. Pessimistic Locking</h2>",r:{minutes:1.43,words:428},t:"Pessimistic Locking vs Optimistic Locking",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/11.html",{loader:()=>e.e(6497).then(e.bind(e,7678)),meta:{d:17316288e5,l:"November 15, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<h2>1. Storage Location</h2>\n<ul>\n<li><strong>Local Storage</strong>: Stored on the client (browser) and tied to a specific domain. Each site has its own Local Storage, and data is not automatically sent to the server.</li>\n<li><strong>Cookies</strong>: Also stored on the client, but they are sent to the server with every request.</li>\n<li><strong>Sessions</strong>: Stored on the server. The client stores only the Session ID, which is used to retrieve data on the server.</li>\n</ul>",r:{minutes:2.32,words:695},t:"Differences Between Local Storage, Cookies, Sessions, and Token",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/12.html",{loader:()=>e.e(1052).then(e.bind(e,8444)),meta:{d:17346528e5,l:"December 20, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<h3>BitMap</h3>\n<p>A bitmap is a data structure that stores a collection of bits, each representing a binary digit (0 or 1). It is used to store a large collection of binary values efficiently. In this case, we can use a bitmap to store a large collection of numbers and check if a given number exists in the collection.</p>",r:{minutes:.55,words:165},t:"How to find out if a number exist in billions of numbers?",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/13.html",{loader:()=>e.e(9635).then(e.bind(e,9240)),meta:{d:17346528e5,l:"December 20, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<p>BIO: Blocking I/O\nNIO: Non-Blocking I/O\nAIO: Asynchronous I/O</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Advantages</th>\n<th>Disadvantages</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BIO</td>\n<td>- Simple to use<br>- Suitable for small-scale applications</td>\n<td>- Blocking, low efficiency<br>- Wastes thread resources</td>\n</tr>\n<tr>\n<td>NIO</td>\n<td>- Non-blocking, high efficiency<br>- Suitable for high concurrency scenarios</td>\n<td>- Higher programming complexity<br>- Requires more system resources</td>\n</tr>\n<tr>\n<td>AIO</td>\n<td>- Fully asynchronous, best performance<br>- Suitable for large-scale applications</td>\n<td>- Complex implementation<br>- May lead to resource management issues</td>\n</tr>\n</tbody>\n</table>",r:{minutes:.29,words:86},t:"BIO, NIO, AIO",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/14.html",{loader:()=>e.e(350).then(e.bind(e,3044)),meta:{d:17408736e5,l:"March 2, 2025",c:["Learning Records"],g:["Programmer cliché"],e:"\n<h2>JDK Dynamic Proxy</h2>\n<p>The JDK Dynamic Proxy is a built-in feature of the Java platform that allows you to create a proxy object that delegates method calls to a target object. The target object is usually an interface or a class that implements the methods you want to expose to the proxy.</p>",r:{minutes:2.19,words:656},t:"Dynamic Proxy (JDK and CGLIB)",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/15.html",{loader:()=>e.e(6069).then(e.bind(e,8187)),meta:{d:174096e7,l:"March 3, 2025",c:["Learning Records"],g:["Programmer cliché"],e:"\n<h2><strong>Introduction</strong></h2>\n<p>The <strong>Snowflake Algorithm</strong> is a <strong>distributed ID generation algorithm</strong> developed by <strong>Twitter</strong>. It is designed for <strong>high-concurrency</strong> environments to generate <strong>globally unique IDs</strong> with <strong>sequential order, uniqueness, and high performance</strong>.</p>",r:{minutes:1.27,words:381},t:"Snowflake Algorithm (Snowflake ID)",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/2.html",{loader:()=>e.e(433).then(e.bind(e,5475)),meta:{d:17307648e5,l:"November 5, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<p>MySQL’s InnoDB storage engine uses <strong>B+ Trees</strong> as its primary data structure for indexing. B+ Trees are a modified version of B-Trees, optimized for database indexing.</p>\n<hr>\n<h2>What is a B-Tree?</h2>\n<p>A B-Tree (Balanced Tree) is a multi-way balanced tree. Key characteristics of B-Trees include:</p>",r:{minutes:1.52,words:455},t:"B-Tree vs. B+ Tree in MySQL InnoDB",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/3.html",{loader:()=>e.e(4650).then(e.bind(e,6919)),meta:{d:17308512e5,l:"November 6, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<p>In MyBatis, both <code>#</code> and <code>*</code> are used in SQL queries, but they serve different purposes:</p>\n<h3><code>#</code> - Parameter Placeholder</h3>\n<p>The <code>#</code> symbol is used to represent <strong>parameter placeholders</strong> in SQL queries. It is used for <strong>parameter substitution</strong> and ensures that user input is safely injected into the query to avoid SQL injection. MyBatis automatically escapes special characters in parameters when <code>#</code> is used.</p>",r:{minutes:.74,words:221},t:"MyBatis: Difference between # and *",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/4.html",{loader:()=>e.e(2343).then(e.bind(e,5351)),meta:{d:17309376e5,l:"November 7, 2024",c:["Learning Records"],g:["Programmer cliché"],e:'\n<h2>1. @Component</h2>\n<ul>\n<li>Marks a class as a Spring bean, allowing Spring to manage it.</li>\n<li>Can be used for general-purpose components.</li>\n</ul>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Component</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyComponent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // class body</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.14,words:341},t:"Commonly Used Spring Annotations",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/5.html",{loader:()=>e.e(1120).then(e.bind(e,568)),meta:{d:1731024e6,l:"November 8, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<p>Spring IOC (Inversion of Control) is a design principle that delegates the responsibility of creating and managing objects to the Spring container. Simply put, IOC means that instead of creating dependencies on its own, an object’s dependencies are managed and injected by an external container like the Spring IOC container.</p>",r:{minutes:1.05,words:315},t:"Spring IOC (Inversion of Control)",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/6.html",{loader:()=>e.e(8565).then(e.bind(e,2942)),meta:{d:17311104e5,l:"November 9, 2024",c:["Learning Records"],g:["Programmer cliché"],e:'\n<p>Scaling is a crucial concept in software architecture and system design, allowing systems to handle increasing loads by adding resources. There are two primary types of scaling: horizontal and vertical scaling.</p>\n<h2>Horizontal Scaling (Scale Out)</h2>\n<p>Horizontal scaling, also known as "scaling out," involves adding more machines or instances to distribute the workload.</p>',r:{minutes:1.84,words:551},t:"Horizontal and Vertical Scaling",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/7.html",{loader:()=>e.e(8462).then(e.bind(e,7423)),meta:{d:17311968e5,l:"November 10, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<p>Reflection in Java is a powerful mechanism that allows a program to inspect and manipulate objects, classes, methods, and fields at runtime, even if their details are not known at compile time. Reflection is particularly useful for dynamic behavior and is widely used in frameworks and libraries for tasks like dependency injection, ORM, and testing.</p>",r:{minutes:1.78,words:534},t:"Java Reflection Mechanism",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/8.html",{loader:()=>e.e(6747).then(e.bind(e,5551)),meta:{d:17312832e5,l:"November 11, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<p>MySQL's transaction properties and isolation levels help ensure data reliability and consistency within database operations.</p>\n<h3>The Four Properties of Transactions (ACID)</h3>\n<ol>\n<li>\n<p><strong>Atomicity</strong><br>\nA transaction is an indivisible unit of operations. All operations within a transaction either complete successfully or are entirely rolled back. If one operation fails, all previous operations in the transaction are undone, ensuring data consistency.</p>\n</li>\n<li>\n<p><strong>Consistency</strong><br>\nBefore and after a transaction, the database must be in a consistent state, adhering to all data integrity constraints (e.g., primary keys, foreign keys).</p>\n</li>\n<li>\n<p><strong>Isolation</strong><br>\nTransactions are executed in isolation from each other, meaning the operations of one transaction are not visible to other transactions until the transaction is complete. This property prevents issues like dirty reads.</p>\n</li>\n<li>\n<p><strong>Durability</strong><br>\nOnce a transaction is committed, its results are permanently saved, even in the event of a system failure. This ensures that data remains intact and recoverable.</p>\n</li>\n</ol>",r:{minutes:1.38,words:413},t:"MySQL Transaction Properties and Isolation Levels",i:"pen-to-square",y:"a"}}],["/posts/clich%C3%A9/9.html",{loader:()=>e.e(1284).then(e.bind(e,6244)),meta:{d:17313696e5,l:"November 12, 2024",c:["Learning Records"],g:["Programmer cliché"],e:"\n<p>Redis offers two main methods for data persistence:</p>\n<h2>1. RDB (Redis Database Backup) Persistence</h2>\n<ul>\n<li><strong>RDB</strong> is a method where Redis periodically saves snapshots of the data stored in memory to disk. This allows Redis to restore data from a specific point in time upon server restart.</li>\n<li><strong>Advantages</strong>:\n<ul>\n<li>Ideal for bulk data backups, as creating snapshots is fast, making it suitable for scheduled backups.</li>\n<li>RDB files are compact, making them easy to store and restore.</li>\n</ul>\n</li>\n<li><strong>Disadvantages</strong>:\n<ul>\n<li>There is a risk of data loss because backups are periodic; if a crash occurs, data added since the last snapshot will be lost.</li>\n<li>Backup operations can be resource-intensive, especially with large datasets.</li>\n</ul>\n</li>\n</ul>",r:{minutes:.92,words:276},t:"Redis Persistence Methods",i:"pen-to-square",y:"a"}}],["/posts/cmb/1.html",{loader:()=>e.e(2264).then(e.bind(e,3414)),meta:{d:17330976e5,l:"December 2, 2024",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>Interface Development: Auto-Complete Project-Related System Configuration Information</h2>\n<h4>Read the source code, understand the business logic</h4>\n<h4>Develop the interface</h4>\n<h4>Do unit test for the interface</h4>\n<h4>Interface optimizations (For same data reduce run time from 2:30 to 1:30)</h4>",r:{minutes:1.47,words:442},t:"Week 1",i:"pen-to-square",y:"a"}}],["/posts/cmb/2.html",{loader:()=>e.e(3869).then(e.bind(e,6844)),meta:{d:17337024e5,l:"December 9, 2024",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>Interface Development: Auto-Complete Project-Related System Configuration Information</h2>\n<h4>Draw a logic diagram of the interface</h4>\n<h4>Code Review (SonarLint and CheckStyle)</h4>\n<h4>Try to lower the cyclomatic complexity of the code</h4>\n<h4>Code logic modification</h4>\n<h4>Run a unit test for the API</h4>",r:{minutes:3.57,words:1072},t:"Week 2",i:"pen-to-square",y:"a"}}],["/posts/cmb/3.html",{loader:()=>e.e(3942).then(e.bind(e,5292)),meta:{d:17343072e5,l:"December 16, 2024",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>Check requirements with the supervisor</h2>\n<h4>Modify the logic</h4>\n<h4>Optimize the SQL logic</h4>\n<h2>General email API on FaaS platform</h2>\n<h4>Learn the basic concepts of FaaS platform in China Merchant Bank</h4>\n<h4>Create a new function in FaaS service</h4>\n<h4>Understand the API structure</h4>",r:{minutes:2.89,words:866},t:"Week 3",i:"pen-to-square",y:"a"}}],["/posts/cmb/4.html",{loader:()=>e.e(5643).then(e.bind(e,7071)),meta:{d:1734912e6,l:"December 23, 2024",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>General email API on FaaS platform</h2>\n<h4>Write interface document</h4>\n<h4>Code inspection meeting</h4>\n<h4>Modify the interface document based on the code inspection meeting</h4>\n<h2>General notice API</h2>\n<h4>Write interface document</h4>\n<h4>Encapsulate email, zhaohu (working app), sms interfaces into a general notice API</h4>",r:{minutes:1.02,words:306},t:"Week 4",i:"pen-to-square",y:"a"}}],["/posts/cmb/5.html",{loader:()=>e.e(6292).then(e.bind(e,4662)),meta:{d:17355168e5,l:"December 30, 2024",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>General notice API</h2>\n<h4>Write interface document</h4>\n<h4>Encapsulate email, zhaohu (working app), sms interfaces into a general notice API</h4>\n<h4>Modify the interface document and codebased on the code inspection meeting</h4>\n<h4>Test the general notice API with sample code</h4>\n<h2>Document auto inspection interface</h2>",r:{minutes:.26,words:78},t:"Week 5",i:"pen-to-square",y:"a"}}],["/posts/cmb/6.html",{loader:()=>e.e(7785).then(e.bind(e,584)),meta:{d:17361216e5,l:"January 6, 2025",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>General notice API</h2>\n<h4>Write interface document</h4>\n<h4>Read the API documentation and source code</h4>\n<h4>Modify the source code to let users can customize the robot sender</h4>\n<h2>Document security check API</h2>\n<h4>Understand the API requirements and specifications</h4>\n<h4>Write interface document</h4>",r:{minutes:1.76,words:528},t:"Week 6",i:"pen-to-square",y:"a"}}],["/posts/cmb/7.html",{loader:()=>e.e(7346).then(e.bind(e,3980)),meta:{d:17367264e5,l:"January 13, 2025",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>Document security check API</h2>\n<h4>Reconstruct the code to reduce the complexity and satisfy the coding standard</h4>\n<h4>Adjust the return format</h4>\n<h4>Test the API in the development environment</h4>\n<h2>Auto-generation of project designing documents</h2>\n<h4>Read prompt engineering document in CMB</h4>",r:{minutes:2.99,words:897},t:"Week 7",i:"pen-to-square",y:"a"}}],["/posts/cmb/8.html",{loader:()=>e.e(4279).then(e.bind(e,8681)),meta:{d:17373312e5,l:"January 20, 2025",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>Document security check API</h2>\n<h4>Develop the front-end page for the document security check API by using internal low code platform (XCode).</h4>\n<h2>Auto-generation of project designing documents</h2>\n<h4>Try to encapsulate the GPT robot into a project</h4>\n<h4>Modify the prompt of GPT robot to make it more suitable for project designing.</h4>",r:{minutes:.39,words:116},t:"Week 8",i:"pen-to-square",y:"a"}}],["/posts/cmb/9.html",{loader:()=>e.e(1184).then(e.bind(e,5741)),meta:{d:17387136e5,l:"February 5, 2025",c:["Internship journal"],g:["China Merchant Bank"],e:"\n<h2>Project-doc API</h2>\n<h4>Organize the project and complete the offboarding handover</h4>\n",r:{minutes:.09,words:28},t:"Week 9",i:"pen-to-square",y:"a"}}],["/posts/docker/1.html",{loader:()=>e.e(4256).then(e.bind(e,4608)),meta:{d:174096e7,l:"March 3, 2025",c:["Learning Records"],g:["Docker"],e:"\n<h3>The runtime environment of the container provider should be decoupled from the data generated by the program and the configurations the program depends on. A volume is a virtual directory that acts as a bridge between the container's internal directory and the host's directory.</h3>\n<h2>Data Mount Directory</h2>",r:{minutes:.79,words:236},t:"Docker Volume",i:"pen-to-square",y:"a"}}],["/posts/dubbo/1.html",{loader:()=>e.e(6078).then(e.bind(e,235)),meta:{d:17393184e5,l:"February 12, 2025",c:["Learning Records"],g:["Dubbo"],e:"\n<h3>Performance Metrics of a Website:</h3>\n<ul>\n<li><strong>Response Time</strong>: The total time taken from the start of a request until the last piece of response data is received.</li>\n<li><strong>Concurrency</strong>: The number of requests that the system can handle simultaneously.</li>\n<li><strong>Concurrent Connections</strong>: The total number of TCP connections established by clients to the server. This refers to the total number of TCP connections per second.</li>\n<li><strong>Request Count</strong>: Also known as QPS (Queries Per Second), it indicates how many requests are made per second.</li>\n<li><strong>Concurrent Users</strong>: The number of users active within a unit of time.</li>\n<li><strong>Throughput</strong>: The number of requests the system can handle in a unit of time.</li>\n<li><strong>QPS</strong>: Queries Per Second, the number of queries per second.</li>\n<li><strong>TPS</strong>: Transactions Per Second, the number of transactions per second.</li>\n</ul>",r:{minutes:.96,words:289},t:"Concepts in Distributed Systems",i:"pen-to-square",y:"a"}}],["/posts/dubbo/2.html",{loader:()=>e.e(727).then(e.bind(e,4081)),meta:{d:17394048e5,l:"February 13, 2025",c:["Learning Records"],g:["Dubbo"],e:"\n\x3c!-- ![Dubbo](/Users/chenruochen/Documents/IT-Study/Project/my-docs/src/.vuepress/public/assets/images/dubbo.png) --\x3e\n<ul>\n<li>Add <code>@DubboService</code> to the provider method.</li>\n<li>Add <code>@DubboReference</code> when the consumer calls remote injection.</li>\n<li>Configure the registry information in the <code>yaml</code> file.</li>\n<li>Create a common interface module and add it as a dependency in both the provider's and consumer's <code>maven</code>.</li>\n</ul>",r:{minutes:.23,words:68},t:"Dubbo Architecture",i:"pen-to-square",y:"a"}}],["/posts/elasticsearch/1.html",{loader:()=>e.e(2425).then(e.bind(e,3357)),meta:{d:17330112e5,l:"December 1, 2024",c:["Learning Records"],g:["ES"],e:"\n<ul>\n<li><strong>Forward Index</strong> is the most traditional, indexing by ID. However, when searching for a term, it must first retrieve each document one by one and then check if the document contains the required term. This is a process of finding terms based on documents.</li>\n<li><strong>Inverted Index</strong>, on the other hand, first finds the term the user wants to search for, gets the IDs of the documents containing that term, and then retrieves the documents based on those IDs. This is a process of finding documents based on terms.</li>\n</ul>",r:{minutes:1.42,words:427},t:"Concepts",i:"pen-to-square",y:"a"}}],["/posts/elasticsearch/2.html",{loader:()=>e.e(9284).then(e.bind(e,6873)),meta:{d:17407872e5,l:"March 1, 2025",c:["Learning Records"],g:["ES"],e:'\n<p>Starting from Elasticsearch 8.x, security authentication is enabled by default, and curl cannot be used to access it directly. You need to use a username and password for authentication.\nTo disable security authentication:</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> vi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/elasticsearch/elasticsearch.yml</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">xpack.security.enabled:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> elasticsearch</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.19,words:57},t:"Practice",i:"pen-to-square",y:"a"}}],["/posts/interview/1.html",{loader:()=>e.e(8313).then(e.bind(e,9247)),meta:{d:1731888e6,l:"November 18, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<h2>1. How to Identify Slow Queries in MySQL</h2>\n<p>Answer:<br>\nDuring our stress testing, we noticed that some API responses were very slow, exceeding 2 seconds. Since our system integrates with SkyWalking/Prometheus for monitoring, its reports helped identify slow APIs and pinpoint which part of the API (including SQL execution) was slow.</p>",r:{minutes:3.3,words:990},t:"MySQL",i:"pen-to-square",y:"a"}}],["/posts/interview/2.html",{loader:()=>e.e(3684).then(e.bind(e,7551)),meta:{d:17319744e5,l:"November 19, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<h2>1. Are singleton beans in the Spring framework thread-safe?</h2>\n<p><strong>Answer:</strong><br>\nNo, they are not thread-safe. When multiple users request a service simultaneously, the container allocates a thread for each request, and these threads concurrently execute business logic. If the logic modifies the singleton's state (e.g., updating a singleton's member property), thread synchronization must be handled explicitly.</p>",r:{minutes:4.39,words:1317},t:"SSM",i:"pen-to-square",y:"a"}}],["/posts/interview/3.html",{loader:()=>e.e(9451).then(e.bind(e,205)),meta:{d:17319744e5,l:"November 19, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<h2>1. What are the five main components of Spring Cloud?</h2>\n<p><strong>Answer:</strong><br>\nInitially, the five key components of Spring Cloud were:</p>\n<ul>\n<li><strong>Eureka</strong>: Service registry.</li>\n<li><strong>Ribbon</strong>: Client-side load balancer.</li>\n<li><strong>Feign</strong>: Declarative service invocation.</li>\n<li><strong>Hystrix</strong>: Circuit breaker.</li>\n<li><strong>Zuul/Gateway</strong>: API gateway.</li>\n</ul>",r:{minutes:3.41,words:1023},t:"MicroServices and SpringCloud",i:"pen-to-square",y:"a"}}],["/posts/interview/4.html",{loader:()=>e.e(4838).then(e.bind(e,4270)),meta:{d:17321472e5,l:"November 21, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<h2>1. <strong>What is cache penetration? How to solve it?</strong></h2>\n<ul>\n<li><strong>Answer</strong>: Um, let me think. Cache penetration refers to querying a certain non-existent data. Since the storage layer cannot find the data, it does not write to the cache, which will cause this non-existent data to query the DB every time, potentially leading to the DB crashing. This situation is likely an attack. The solution we usually use is a Bloom filter to solve it.</li>\n</ul>",r:{minutes:11.83,words:3549},t:"Redis",i:"pen-to-square",y:"a"}}],["/posts/interview/5.html",{loader:()=>e.e(6557).then(e.bind(e,4697)),meta:{d:17321472e5,l:"November 21, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<h2>1. <strong>How does RabbitMQ ensure message delivery without loss?</strong></h2>\n<ul>\n<li><strong>Answer</strong>: We use RabbitMQ to ensure data dual-write consistency between MySQL and Redis, which requires us to implement high availability for messages. Specific measures include:\n<ol>\n<li>Enable producer acknowledgment to ensure messages are delivered to the queue; if there is an error, log it and fix the data.</li>\n<li>Enable persistence to ensure messages are not lost in the queue before consumption; persistence needs to be applied to the exchange, queue, and the message itself.</li>\n<li>Enable automatic acknowledgment for consumers and set retry counts. For example, we set 3 retries; if it fails, the message is sent to an exception exchange for manual processing.</li>\n</ol>\n</li>\n</ul>",r:{minutes:3.04,words:912},t:"Message Queue",i:"pen-to-square",y:"a"}}],["/posts/interview/6.html",{loader:()=>e.e(24).then(e.bind(e,1341)),meta:{d:17321472e5,l:"November 21, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<figure><figcaption>collection.png</figcaption></figure>\n<h2>Array is a linear data structure that stores data of the same data type in contiguous memory space.</h2>\n<h3>Addressing formula arr[i] = baseAddress + i * dataTypeSize</h3>\n<ul>\n<li><strong>baseAddress</strong>: the starting address of the array</li>\n<li><strong>dataTypeSize</strong>: represents the size of the element type in the array, currently the array stores int type data, dataTypeSize = 4 bytes</li>\n<li><strong>arr</strong>: refers to the array</li>\n<li><strong>i</strong>: refers to the index of the array</li>\n</ul>",r:{minutes:5.64,words:1692},t:"Java Collections",i:"pen-to-square",y:"a"}}],["/posts/interview/7.html",{loader:()=>e.e(3535).then(e.bind(e,554)),meta:{d:173232e7,l:"November 23, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<h2>1.1 What is the difference between threads and processes?</h2>\n<ul>\n<li>A process is an instance of a running program, which contains threads, each executing different tasks.</li>\n<li>Different processes use different memory spaces, while all threads within the current process can share the same memory space.</li>\n<li>Threads are lighter; the cost of context switching between threads is generally lower than that of context switching between processes (context switching refers to switching from one thread to another).</li>\n</ul>",r:{minutes:13.29,words:3986},t:"Java Concurrent Programming",i:"pen-to-square",y:"a"}}],["/posts/interview/8.html",{loader:()=>e.e(7946).then(e.bind(e,3377)),meta:{d:17324064e5,l:"November 24, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<h2>1.1 What are the components of the JVM and what is the execution process?</h2>\n<p>\nFrom the diagram, we can see the main components of the JVM:</p>\n<ul>\n<li>ClassLoader</li>\n<li>Runtime Data Area</li>\n<li>Execution Engine</li>\n<li>Native Method Library</li>\n</ul>\n<p>Execution process:</p>\n<ol>\n<li>The ClassLoader converts Java code into bytecode.</li>\n<li>The Runtime Data Area loads the bytecode into memory. The bytecode file is merely a set of instruction specifications for the JVM and cannot be directly executed by the underlying system; it requires the Execution Engine to run.</li>\n<li>The Execution Engine translates the bytecode into low-level system instructions, which are then executed by the CPU. At this point, it may need to call the Native Method Library to implement the functionality of the entire program.</li>\n</ol>",r:{minutes:10.77,words:3230},t:"JVM",i:"pen-to-square",y:"a"}}],["/posts/interview/9.html",{loader:()=>e.e(7489).then(e.bind(e,2648)),meta:{d:17324064e5,l:"November 24, 2024",c:["Learning Records"],g:["Technical Interview"],e:"\n<h1>Single Sign-On (SSO) and Authentication Guide</h1>\n<h2>1. Single Sign-On (SSO)</h2>\n<h3>Definition</h3>\n<ul>\n<li>Single Sign-On (SSO) is an authentication method</li>\n<li>Allows users to access multiple systems with one set of credentials</li>\n<li>Providing centralized login across different applications</li>\n</ul>",r:{minutes:.54,words:162},t:"Others",i:"pen-to-square",y:"a"}}],["/posts/istio/1.html",{loader:()=>e.e(2718).then(e.bind(e,370)),meta:{d:1740096e6,l:"February 21, 2025",c:["Learning Records"],g:["Istio"],e:"\n<h2>Differences Between Service Mesh and Traditional Spring Cloud</h2>\n<h3>1. Architecture Layer</h3>\n<ul>\n<li><strong>Service Mesh</strong>: Service Mesh is an infrastructure layer specifically designed to handle communication between services. It achieves this by deploying a proxy (sidecar) alongside each service instance, which manages all network traffic.</li>\n<li><strong>Spring Cloud</strong>: Spring Cloud is a framework that provides a set of tools and libraries to simplify the development of microservice architectures. It primarily relies on the Java and Spring ecosystem, implementing service communication and management through code libraries and configurations.</li>\n</ul>",r:{minutes:1.31,words:392},t:"Service Mesh",i:"pen-to-square",y:"a"}}],["/posts/mybatis/1.html",{loader:()=>e.e(751).then(e.bind(e,4946)),meta:{d:17328384e5,l:"November 29, 2024",c:["Learning Records"],g:["MyBatis"],e:'\n<h3>Reading</h3>\n<p>Mapping between properties and column names:</p>\n<div class="language-mybatis line-numbers-mode" data-highlighter="shiki" data-ext="mybatis" data-title="mybatis" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;resultMap id="uniqueIdentifier" type="mappedType"&gt;</span></span>\n<span class="line"><span>    &lt;id column="tableColumnName" property="entityPropertyName"&gt;&lt;/id&gt; </span></span>\n<span class="line"><span>    &lt;result column="tableColumnName" property="entityPropertyName"&gt;&lt;/result&gt;</span></span>\n<span class="line"><span>[//]: # (    id is for primary key mapping, result is for non-primary key mapping)</span></span>\n<span class="line"><span>&lt;/resultMap&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.6,words:480},t:"MyBatis",i:"pen-to-square",y:"a"}}],["/posts/mybatis/2.html",{loader:()=>e.e(8406).then(e.bind(e,3922)),meta:{d:17329248e5,l:"November 30, 2024",c:["Learning Records"],g:["MyBatis"],e:'\n<h3>Annotations</h3>\n<h3>Annotations</h3>\n<p>MyBatis-Plus infers table information based on the PO (Persistent Object) entity details to generate SQL. By default:</p>\n<ul>\n<li>MyBatis-Plus converts the PO entity class name from camelCase to snake_case for the table name.</li>\n<li>MyBatis-Plus converts all variable names in the PO entity from camelCase to snake_case for the column names, and infers the column types from the variable types.</li>\n<li>MyBatis-Plus treats a field named <code>id</code> as the primary key.\nHowever, the default implementation often does not match actual scenarios, so MyBatis-Plus provides several annotations to facilitate the declaration of table information.\nAnnotations: <a href="https://baomidou.com/reference/annotation/" target="_blank" rel="noopener noreferrer">https://baomidou.com/reference/annotation/</a>\nKey annotations: @TableName, @TableId, @TableField</li>\n</ul>',r:{minutes:2.81,words:844},t:"MyBaits-Plus",i:"pen-to-square",y:"a"}}],["/posts/nextjs/1.html",{loader:()=>e.e(674).then(e.bind(e,7141)),meta:{d:17333568e5,l:"December 5, 2024",c:["Learning Records"],g:["React"],e:'\n<h2>useState</h2>\n<p><code>useState</code> is a Hook that lets you add state to functional components. It returns the current state and a function to update that state.</p>\n<h3>Example</h3>\n<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> React</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">useState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'react\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // Declare a state variable named "count"</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">setCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;You clicked </span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">count</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> times&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> onClick</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">count</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        Click me</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  );</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.87,words:560},t:"React Hook",i:"pen-to-square",y:"a"}}],["/posts/nextjs/2.html",{loader:()=>e.e(8299).then(e.bind(e,8596)),meta:{d:17337024e5,l:"December 9, 2024",c:["Learning Records"],g:["NextJS"],e:"\n<h3>Terminology</h3>\n<ul>\n<li><strong>Route Segment</strong>: Each folder in a route represents a route segment. These segments map directly to parts of the URL path.</li>\n<li><strong>Dynamic Routes</strong>: Using brackets <code>[]</code> around a filename allows you to match dynamic segments, enabling parameters in URLs.</li>\n<li><strong>Nested Routes</strong>: By nesting folders inside one another, you can create nested routes that reflect deeper URL structures.</li>\n<li><strong>Special Files</strong>: Certain filenames have special meanings in Next.js, such as <code>index.js</code>, which serves as the default page for a directory, or <code>[...slug].js</code> for catch-all routes.</li>\n</ul>",r:{minutes:1.88,words:564},t:"NextJS File-Based Routing",i:"pen-to-square",y:"a"}}],["/posts/nextjs/3.html",{loader:()=>e.e(84).then(e.bind(e,5794)),meta:{d:17337888e5,l:"December 10, 2024",c:["Learning Records"],g:["Javascript"],e:'\n<h3>map() method</h3>\n<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Simple example with numbers</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> numbers</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> doubles</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> numbers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">doubles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Output: [2, 8, 18]</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.59,words:178},t:"Vanilla Javascript Method",i:"pen-to-square",y:"a"}}],["/posts/nextjs/4.html",{loader:()=>e.e(429).then(e.bind(e,3565)),meta:{d:17338752e5,l:"December 11, 2024",c:["Learning Records"],g:["NextJS"],e:"\n<p>In Next.js, using the <code>.module.css</code> suffix for CSS files enables the CSS Modules feature. CSS Modules allow us to scope styles locally, preventing global naming conflicts. This means that the styles for each component are independent and only effective within that component, enhancing the maintainability and readability of the code.</p>",r:{minutes:.84,words:252},t:"Understanding .module.css in Next.js",i:"pen-to-square",y:"a"}}],["/posts/nextjs/5.html",{loader:()=>e.e(3478).then(e.bind(e,4515)),meta:{d:17338752e5,l:"December 11, 2024",c:["Learning Records"],g:["NextJS"],e:"\n<h2>Static Site Generation (SSG)</h2>\n<p>Static site generation (SSG) is a type of pre-rendering that generates HTML at build time. This means that the HTML is generated at build time and sent to the client. This is different from dynamic rendering, where the HTML is generated on the server at request time.</p>",r:{minutes:2.97,words:892},t:"SSG and SSR",i:"pen-to-square",y:"a"}}],["/posts/nextjs/6.html",{loader:()=>e.e(2575).then(e.bind(e,455)),meta:{d:17338752e5,l:"December 11, 2024",c:["Learning Records"],g:["NextJS"],e:'\n<h2>Add head content</h2>\n<p>To add head content to a NextJS page, we can use the <code>Head</code> component from the <code>next/head</code> package. Here\'s an example:</p>\n<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> Head</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'next/head\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MyPage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;My Page Title&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"description"</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> content</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"My page description"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;My Page Content&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    );</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.43,words:428},t:"Other NextJS Features",i:"pen-to-square",y:"a"}}],["/posts/nextjs/7.html",{loader:()=>e.e(3064).then(e.bind(e,901)),meta:{d:17347392e5,l:"December 21, 2024",c:["Learning Records"],g:["NextJS"],e:'\n<h2>Craete a folder named <code>api</code> in the <code>pages</code> folder directory of your project.</h2>\n<p>Inside the <code>api</code> folder, create a new file named <code>hello.js</code>.</p>\n<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> handler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">req</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'Hello from API!\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.38,words:114},t:"API Routes in NextJS",i:"pen-to-square",y:"a"}}],["/posts/nextjs/8.html",{loader:()=>e.e(5905).then(e.bind(e,5938)),meta:{d:1734912e6,l:"December 23, 2024",c:["Learning Records"],g:["React"],e:"\n<p>React Context API is a way to pass data through the component tree without having to pass props down manually at every level. It provides a way to share values between components without having to explicitly wire them together.</p>\n<h2>Basic Usage</h2>\n<p>To use React Context API, we need to create a context object using the <code>createContext</code> function. Then, we can use the <code>Provider</code> component to wrap our top-level component and pass the context object as a prop.</p>",r:{minutes:.71,words:214},t:"React Context API",i:"pen-to-square",y:"a"}}],["/posts/nginx/1.html",{loader:()=>e.e(650).then(e.bind(e,128)),meta:{d:17402688e5,l:"February 23, 2025",c:["Learning Records"],g:["Nginx"],e:'\n<h4>Nginx starts with multiple processes</h4>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[root@node1 nginx]# ps -ef | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">       25420</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">       1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 11:39</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> process</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /usr/sbin/nginx</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">      25421</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">   25420</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 11:39</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> worker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> process</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">      25422</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">   25420</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 11:39</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> worker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> process</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">      25423</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">   25420</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 11:39</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> worker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> process</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">      25424</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">   25420</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 11:39</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> worker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> process</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">       27519</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    3778</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 11:49</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pts/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --color=auto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:3.35,words:1004},t:"Nginx Basic",i:"pen-to-square",y:"a"}}],["/posts/nginx/2.html",{loader:()=>e.e(1107).then(e.bind(e,376)),meta:{d:17403552e5,l:"February 24, 2025",c:["Learning Records"],g:["Nginx"],e:'\n<h2>Check ZH Version</h2>\n<p><a href="/personalweb/zh/posts/nginx/1.html" target="_blank">ZH Version</a></p>\n',r:{minutes:.07,words:21},t:"Nginx Advanced",i:"pen-to-square",y:"a"}}],["/posts/typescript/1.html",{loader:()=>e.e(1175).then(e.bind(e,550)),meta:{d:1734912e6,l:"December 23, 2024",c:["Learning Records"],g:["Typescript"],e:"\n<h2>0. Introduction to TypeScript</h2>\n<ol>\n<li>TypeScript is a superset of JavaScript.</li>\n<li>It extends JS by introducing the concept of types and adding many new features.</li>\n<li>TS code needs to be compiled into JS by a compiler before being executed by a JS parser.</li>\n<li>TS is fully compatible with JS; in other words, any JS code can be used as JS directly.</li>\n<li>Compared to JS, TS has static types, stricter syntax, and more powerful features; TS can perform code checks before execution, reducing the likelihood of runtime exceptions; TS code can be compiled into any version of JS code, effectively solving compatibility issues across different JS runtime environments; for the same functionality, TS code tends to be larger than JS, but due to TS's clearer code structure and more explicit variable types, TS is far superior to JS in later code maintenance.</li>\n</ol>",r:{minutes:6.54,words:1961},t:"Chapter 1 Quick Start",i:"pen-to-square",y:"a"}}],["/posts/typescript/2.html",{loader:()=>e.e(6526).then(e.bind(e,3129)),meta:{d:17350848e5,l:"December 25, 2024",c:["Learning Records"],g:["Typescript"],e:"\n<h2>1. Class</h2>\n<p>To be object-oriented and manipulate objects, you must first have objects. The next question is how to create objects. To create an object, you must first define a class. A class can be understood as a model of an object. In the program, you can create specified types of objects based on the class. For example, you can create a person's object through the Person class, a dog's object through the Dog class, and a car's object through the Car class. Different classes can be used to create different objects.</p>",r:{minutes:4.81,words:1443},t:"Chapter 2: Object-Oriented",i:"pen-to-square",y:"a"}}],["/posts/typescript/3.html",{loader:()=>e.e(3573).then(e.bind(e,6500)),meta:{d:17351712e5,l:"December 26, 2024",c:["Learning Records"],g:["Typescript"],e:'\n<h2>Class Decorators</h2>\n<p>Class decorators are used to modify the class definition. They can be used to add properties, methods, or static properties to the class.</p>\n<div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">myDecorator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">param</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // class definition</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.3,words:389},t:"Decorators in Typescript",i:"pen-to-square",y:"a"}}],["/posts/unimelb/1.html",{loader:()=>e.e(4608).then(e.bind(e,5098)),meta:{d:17306784e5,l:"November 4, 2024",c:["Learning Records"],g:["Unimelb"],e:"\n<h2>Week 1: Intro to Projects</h2>\n<h3>Project Characteristics:</h3>\n<ul>\n<li>Introduce Change</li>\n<li>Temporary</li>\n<li>Cross-functional</li>\n<li>Deal with Unknown</li>\n<li>Unique</li>\n<li>Vary in Size</li>\n</ul>\n<h3>First Project Management Process:</h3>\n<ul>\n<li>Initialization</li>\n</ul>\n<h3>PM Skills:</h3>",r:{minutes:6.63,words:1988},t:"Software Process and Management (SWEN90016)",i:"pen-to-square",y:"a"}}],["/posts/unimelb/2.html",{loader:()=>e.e(9477).then(e.bind(e,8063)),meta:{d:17408736e5,l:"March 2, 2025",c:["Learning Records"],g:["Unimelb"],e:"\n<h2>Week 1</h2>\n<h4>Imperative languages are based on commands, in the form of instructions and statements.</h4>\n<ul>\n<li>Commands are executed.</li>\n<li>Commands have an effect, such as to update the computation state,and later code may depend on this update.</li>\n</ul>\n<h4>Logic programming languages are based on finding values that satisfy a set of constraints.</h4>",r:{minutes:1.66,words:497},t:"Declarative Programming (COMP90048)",i:"pen-to-square",y:"a"}}],["/posts/unimelb/3.html",{loader:()=>e.e(3697).then(e.bind(e,4516)),meta:{d:17408736e5,l:"March 2, 2025",c:["Learning Records"],g:["Unimelb"],e:"\n<h2>Week 1</h2>\n<ul>\n<li>Machine learning is a method of teaching software to learn from data and make decisions on their own, without being explicitly programmed.</li>\n</ul>\n<h3>Three ingredients for machine learning</h3>\n<ol>\n<li>\n<p>Data\n• Discrete vs continuous vs ...\n• Big data vs small data\n• Labeled data vs unlabeled data\n• Public vs sensitive data</p>\n</li>\n<li>\n<p>Models\n• function mapping from inputs to outputs\n• probabilistic machine learning models\n• geometric machine learning models\n• parameters of the function are unknown</p>\n</li>\n<li>\n<p>Learning\n• Improving (on a task) after data is taken into account\n• Finding the best model parameters (for a given task)\n• Supervised vs. unsupervised learning</p>\n</li>\n</ol>",r:{minutes:3.19,words:957},t:"Introduction to Machine Learning (COMP90049)",i:"pen-to-square",y:"a"}}],["/posts/unimelb/4.html",{loader:()=>e.e(7299).then(e.bind(e,732)),meta:{d:17408736e5,l:"March 2, 2025",c:["Learning Records"],g:["Unimelb"],e:"\n",r:{minutes:.06,words:17},t:"Advanced Database Systems (COMP90050)",i:"pen-to-square",y:"a"}}],["/posts/unimelb/5.html",{loader:()=>e.e(4764).then(e.bind(e,6253)),meta:{d:17408736e5,l:"March 2, 2025",c:["Learning Records"],g:["Unimelb"],e:"\n<h2>Week 1</h2>\n<h3>Cloud Characteristics</h3>\n<p>– On-demand self-service . A consumer can provision computing\ncapabilities as needed without requiring human interaction with\neach service provider.\n– Networked access . Capabilities are available over the network and\naccessed through standard mechanisms that promote use by\nheterogeneous client platforms.</p>",r:{minutes:.5,words:149},t:"Cluster and Cloud Computing (COMP90024)",i:"pen-to-square",y:"a"}}],["/zh/posts/genesis.html",{loader:()=>e.e(115).then(e.bind(e,9022)),meta:{d:17305056e5,l:"2024年11月2日",c:["开始"],g:["旅程"],u:!0,e:"\n<p>欢迎来到我的博客！这里是我记录编程世界旅程的开始 🎉</p>\n<h2>本博客的目的</h2>\n<p>在这个博客中，我将记录我的课程学习记录，展示我的项目，并分享我在编程过程中个人的反思。我的目标是创造一个供学习和分享知识的空间，与同样热爱编程的朋友们交流。</p>\n<h3>期待的内容</h3>\n<ul>\n<li><strong>学习记录 🗒️</strong>: 来自我课程的笔记和见解。</li>\n<li><strong>项目展示 💻</strong>: 对我个人项目及其开发过程的详细介绍。</li>\n<li><strong>个人反思 📓</strong>: 在我编程旅程中所学到的思想和经验。</li>\n</ul>",r:{minutes:.67,words:201},t:"开始",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/concepts/1.html",{loader:()=>e.e(7170).then(e.bind(e,7909)),meta:{d:17308512e5,l:"November 6, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<p>Stateless and stateful applications differ mainly in whether they store session data or state information between requests. Here’s a detailed comparison:</p>\n<h2>1. Stateless Application</h2>\n<ul>\n<li><strong>Definition</strong>: A stateless application does not store any session information on the server side. Each request is independent and does not rely on any previous requests.</li>\n<li><strong>Characteristics</strong>:\n<ul>\n<li><strong>Independent Requests</strong>: Every request must contain all information required for processing, as the server does not remember any user state.</li>\n<li><strong>High Scalability</strong>: Stateless applications are easy to horizontally scale because different requests can be processed by different servers.</li>\n<li><strong>High Availability</strong>: Since there’s no reliance on any particular server for user state, the application remains available even if a node fails.</li>\n<li>Stateless means not storing session state on the server, not storing data at all.</li>\n<li>Data can be passed through the client or token, or persisted in the database, but context information between requests will not be kept in the server's memory.</li>\n</ul>\n</li>\n<li><strong>Typical Use Cases</strong>: RESTful APIs, most web applications, microservices architecture.</li>\n</ul>",r:{minutes:1.12,words:337},t:"Difference Between Stateless and Stateful Applications",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/concepts/2.html",{loader:()=>e.e(7387).then(e.bind(e,8313)),meta:{d:17308512e5,l:"November 6, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<p>Full updates and rolling updates are two common methods for system updates, particularly in service deployment and application upgrades. Here’s a comparison of their differences and characteristics:</p>\n<h2>1. Full Update</h2>\n<ul>\n<li><strong>Definition</strong>: A full update replaces all service instances or system components at once during the update process.</li>\n<li><strong>Characteristics</strong>:\n<ul>\n<li><strong>Completed Quickly</strong>: Since everything is replaced at once, the update process is typically fast.</li>\n<li><strong>Service Interruption</strong>: This often requires a short downtime, causing the service to be unavailable (unless a blue-green deployment or similar technique is used to minimize disruption).</li>\n<li><strong>Higher Risk</strong>: Replacing everything at once can make rollback difficult if issues arise.</li>\n</ul>\n</li>\n<li><strong>Suitable Scenarios</strong>: Ideal for smaller systems, updates during low-traffic periods, or applications that do not require high business continuity.</li>\n</ul>",r:{minutes:.95,words:286},t:"Full Update vs. Rolling Update",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/concepts/3.html",{loader:()=>e.e(1924).then(e.bind(e,3491)),meta:{d:17308512e5,l:"November 6, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<p>Kubernetes (K8s) has several core components that ensure the proper functioning and management of containerized applications in a cluster. These components can be grouped into <strong>Control Plane</strong>, <strong>Nodes</strong>, and other key functionalities.</p>\n<h2>1. Control Plane</h2>\n<p>The Control Plane manages the state of the entire Kubernetes cluster, handling user requests, scheduling, monitoring, and coordination. The main components are:</p>",r:{minutes:2.27,words:682},t:"Core Components of Kubernetes",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/concepts/4.html",{loader:()=>e.e(2797).then(e.bind(e,5738)),meta:{d:17308512e5,l:"November 6, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<p><strong>East-West Traffic</strong> and <strong>North-South Traffic</strong> are terms commonly used in computer networking and data centers to describe the direction and type of data flow.</p>\n<h2>1. East-West Traffic</h2>\n<p><strong>East-West Traffic</strong> refers to the communication between different servers, containers, or application services within the same data center or private network. Typically, it describes the flow of data between services or applications.</p>",r:{minutes:1.15,words:344},t:"East-West Traffic vs North-South Traffic",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/concepts/5.html",{loader:()=>e.e(2646).then(e.bind(e,7034)),meta:{d:17308512e5,l:"November 6, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<h2>Traditional Deployment</h2>\n<p>In the early days of the internet, applications were directly deployed on physical machines.</p>\n<h3>Advantages:</h3>\n<ul>\n<li>Simple</li>\n<li>Does not require the involvement of other technologies</li>\n</ul>\n<h3>Disadvantages:</h3>\n<ul>\n<li>No clear resource boundaries for the application</li>\n<li>Difficult to allocate computing resources efficiently</li>\n<li>Programs may interfere with each other easily</li>\n</ul>",r:{minutes:.85,words:256},t:"Different Types Of Deployment",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/concepts/6.html",{loader:()=>e.e(5631).then(e.bind(e,515)),meta:{d:17308512e5,l:"November 6, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<p>Kubernetes is essentially a cluster of servers that can run specific programs on each node to manage containers within the nodes. Its main goal is to automate resource management. Kubernetes primarily provides the following key features:</p>\n<h2>Key Features of Kubernetes</h2>\n<h3>1. Self-healing</h3>",r:{minutes:1.39,words:417},t:"Kubernetes Overview",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/concepts/7.html",{loader:()=>e.e(7368).then(e.bind(e,6591)),meta:{d:1731024e6,l:"November 8, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<table>\n<thead>\n<tr>\n<th>Parameter Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>apiVersion</td>\n<td>String</td>\n<td>The version of the K8S API, which can be queried with the <code>kubectl api versions</code> command</td>\n</tr>\n<tr>\n<td>kind</td>\n<td>String</td>\n<td>The resource type and role defined in the YAML file</td>\n</tr>\n<tr>\n<td>metadata</td>\n<td>Object</td>\n<td>Metadata object, containing the following properties:</td>\n</tr>\n<tr>\n<td>metadata.name</td>\n<td>String</td>\n<td>Name of the metadata object, for example, the pod name</td>\n</tr>\n<tr>\n<td>metadata.namespace</td>\n<td>String</td>\n<td>The namespace of the metadata object</td>\n</tr>\n<tr>\n<td>spec</td>\n<td>Object</td>\n<td>Detailed specification of the object</td>\n</tr>\n<tr>\n<td>spec.containers[]</td>\n<td>List</td>\n<td>List of containers defined in the Spec object</td>\n</tr>\n<tr>\n<td>spec.containers[].name</td>\n<td>String</td>\n<td>Name of a specific container in the list</td>\n</tr>\n<tr>\n<td>spec.containers[].image</td>\n<td>String</td>\n<td>The image name required for a specific container in the list</td>\n</tr>\n<tr>\n<td>spec.containers[].imagePullPolicy</td>\n<td>String</td>\n<td>Defines the image pull policy, can be <code>Always</code>, <code>Never</code>, or <code>IfNotPresent</code>:<br>  - <code>Always</code> (default): Always attempt to pull the image.<br>  - <code>Never</code>: Use only local images.<br>  - <code>IfNotPresent</code>: Use the local image if available, otherwise pull from the repository.</td>\n</tr>\n<tr>\n<td>spec.containers[].command[]</td>\n<td>List</td>\n<td>Specifies the container's startup command. It is an array, so multiple commands can be specified. If not specified, the command used in the image is used.</td>\n</tr>\n<tr>\n<td>spec.containers[].args[]</td>\n<td>List</td>\n<td>Specifies the container's startup command arguments. Multiple arguments can be specified as an array.</td>\n</tr>\n<tr>\n<td>spec.containers[].workingDir</td>\n<td>String</td>\n<td>Specifies the working directory for the container</td>\n</tr>\n<tr>\n<td>spec.containers[].volumeMounts[]</td>\n<td>List</td>\n<td>List of volume mount configurations for the container</td>\n</tr>\n<tr>\n<td>spec.containers[].volumeMounts[].name</td>\n<td>String</td>\n<td>Specifies the name of the volume that the container can mount</td>\n</tr>\n<tr>\n<td>spec.containers[].volumeMounts[].mountPath</td>\n<td>String</td>\n<td>Specifies the path where the container mounts the volume</td>\n</tr>\n<tr>\n<td>spec.containers[].volumeMounts[].readOnly</td>\n<td>Boolean</td>\n<td>Sets the read/write mode of the volume mount path, <code>true</code> or <code>false</code> (default is read-write)</td>\n</tr>\n<tr>\n<td>spec.containers[].ports[]</td>\n<td>List</td>\n<td>List of ports required by the container</td>\n</tr>\n<tr>\n<td>spec.containers[].ports[].name</td>\n<td>String</td>\n<td>The name of the port</td>\n</tr>\n<tr>\n<td>spec.containers[].ports[].containerPort</td>\n<td>String</td>\n<td>The port number the container needs to listen on</td>\n</tr>\n<tr>\n<td>spec.containers[].ports[].hostPort</td>\n<td>String</td>\n<td>The port number on the host that the container needs to listen on (defaults to the same as <code>containerPort</code>). Setting <code>hostPort</code> means that the same pod cannot be started again on the same host (due to port conflict).</td>\n</tr>\n<tr>\n<td>spec.containers[].ports[].protocol</td>\n<td>String</td>\n<td>The port protocol, can be <code>TCP</code> or <code>UDP</code> (default is <code>TCP</code>)</td>\n</tr>\n<tr>\n<td>spec.containers[].env[]</td>\n<td>List</td>\n<td>List of environment variables to be set for the container before it starts</td>\n</tr>\n<tr>\n<td>spec.containers[].env[].name</td>\n<td>String</td>\n<td>The name of the environment variable</td>\n</tr>\n<tr>\n<td>spec.containers[].env[].value</td>\n<td>String</td>\n<td>The value of the environment variable</td>\n</tr>\n<tr>\n<td>spec.containers[].resources</td>\n<td>Object</td>\n<td>Defines resource limits and requests for the container</td>\n</tr>\n<tr>\n<td>spec.containers[].resources.limits</td>\n<td>Object</td>\n<td>Specifies resource limits for the container during runtime</td>\n</tr>\n<tr>\n<td>spec.containers[].resources.limits.cpu</td>\n<td>String</td>\n<td>CPU limit, specified in cores, used for the <code>docker run --cpu-shares</code> parameter</td>\n</tr>\n<tr>\n<td>spec.containers[].resources.limits.memory</td>\n<td>String</td>\n<td>Memory limit, specified in MiB or GiB</td>\n</tr>\n<tr>\n<td>spec.containers[].resources.requests</td>\n<td>Object</td>\n<td>Defines the resource requests for the container during startup and scheduling</td>\n</tr>\n<tr>\n<td>spec.containers[].resources.requests.cpu</td>\n<td>String</td>\n<td>CPU request, specified in cores, defines the initial amount available when the container starts</td>\n</tr>\n<tr>\n<td>spec.containers[].resources.requests.memory</td>\n<td>String</td>\n<td>Memory request, specified in MiB or GiB, defines the initial amount available when the container starts</td>\n</tr>\n<tr>\n<td>spec.restartPolicy</td>\n<td>String</td>\n<td>Defines the restart policy for the pod, possible values: <code>Always</code>, <code>OnFailure</code>, <code>Never</code> (default is <code>Always</code>):<br>  - <code>Always</code>: If the pod terminates, it will be restarted regardless of how it was terminated.<br>  - <code>OnFailure</code>: The pod is restarted only if it terminates with a non-zero exit code.<br>  - <code>Never</code>: The pod will not be restarted after termination.</td>\n</tr>\n<tr>\n<td>spec.nodeSelector</td>\n<td>Object</td>\n<td>Defines label selectors for filtering nodes, specified in <code>key: value</code> format</td>\n</tr>\n<tr>\n<td>spec.imagePullSecrets</td>\n<td>Object</td>\n<td>Defines the name of the secret used for image pulls, specified in <code>name: secretkey</code> format</td>\n</tr>\n<tr>\n<td>spec.hostNetwork</td>\n<td>Boolean</td>\n<td>Defines whether to use the host network mode, default is <code>false</code>. Setting this to <code>true</code> means the container uses the host network instead of Docker's bridge network. This will prevent multiple replicas of the same container from running on the same host.</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.15,words:646},t:"K8S Resource YAML Configuration",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/microsvc/1.html",{loader:()=>e.e(1609).then(e.bind(e,9765)),meta:{d:17315424e5,l:"November 14, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<figure><figcaption>DevOps.png</figcaption></figure>\n<h2>GitLab Installation and Configuration</h2>\n<h3>Download the rpm</h3>\n<p><a href="https://packages.gitlab.com/gitlab/gitlab-ce" target="_blank" rel="noopener noreferrer">GitLab Installation</a></p>\n<h3>Installation</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rpm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gitlab-ce-17.3.7-ce.0.el8.aarch64.rpm</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.31,words:92},t:"MicroServices",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/1.html",{loader:()=>e.e(4365).then(e.bind(e,2423)),meta:{d:17309376e5,l:"November 7, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<h3>Download mirror iso file on 'https://www.centos.org/download/', and use VMWare Fusion to set up 3 different CentOS 9.</h3>\n<h4>This guide will walk you through setting up a K3s cluster with 1 master node and 2 worker nodes on CentOS 9. The master node's IP is <code>172.16.217.137</code>, worker nodes' IPs are <code>172.16.217.138</code> and <code>172.16.217.139</code>.</h4>",r:{minutes:2.71,words:813},t:"Setting up K3s Cluster on CentOS 9",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/10.html",{loader:()=>e.e(669).then(e.bind(e,1291)),meta:{d:17313696e5,l:"November 12, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<h2>Volumes</h2>\n<h3>HostPath allows you to mount a file or directory from the host node into a Pod. When using HostPath, the specified directory on the node serves as a persistent storage location. Even if the Pod is deleted or restarted, the data in that directory remains intact and can be reloaded, ensuring that files in the directory are not lost.</h3>",r:{minutes:2.21,words:664},t:"Persist Storage",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/11.html",{loader:()=>e.e(742).then(e.bind(e,7518)),meta:{d:1731456e6,l:"November 13, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<div class="hint-container info">\n<p class="hint-container-title">Info</p>\n<p>In Linux, use "crontab -e" to write some expression</p>\n</div>\n<h2>CronJob</h2>\n<h3>Similar as crontab in Linux</h3>\n<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">apiVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">batch/v1</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">CronJob</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">hello</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  concurrencyPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Allow</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 并发调度策略：Allow 允许并发调度，Forbid：不允许并发执行，Replace：如果之前的任务还没执行完，就直接执行新的，放弃上一个任务</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  failedJobsHistoryLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 保留多少个失败的任务</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  successfulJobsHistoryLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 保留多少个成功的任务</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  suspend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 是否挂起任务，若为 true 则该任务不会执行</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#  startingDeadlineSeconds: 30 # 间隔多长时间检测失败的任务并重新执行，时间不能小于 10</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  schedule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"* * * * *"</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 调度策略</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  jobTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          containers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">hello</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">busybox:1.28</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            imagePullPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">IfNotPresent</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/bin/sh</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">-c</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">date; echo Hello from the Kubernetes cluster</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          restartPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">OnFailure</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.62,words:785},t:"Advanced Scheduling",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/12.html",{loader:()=>e.e(911).then(e.bind(e,3022)),meta:{d:1731456e6,l:"November 13, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<p>Helm is a package manager for Kubernetes, designed to simplify the deployment and management of applications on Kubernetes clusters. Helm allows developers to package, configure, and deploy applications as reusable "charts," which are collections of YAML files that describe a related set of Kubernetes resources.</p>',r:{minutes:1.34,words:403},t:"Helm: Kubernetes Package Manager",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/13.html",{loader:()=>e.e(9064).then(e.bind(e,895)),meta:{d:1731456e6,l:"November 13, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<figure><figcaption>Prometheus.png</figcaption></figure>\n<ol>\n<li>DIY Configuration</li>\n<li><a href="https://github.com/prometheus-operator/kube-prometheus" target="_blank" rel="noopener noreferrer">Kube-prometheus</a> (Recommended)</li>\n</ol>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> kube-prometheus</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> manifests/setup/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> manifests/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> all</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> monitoring</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> svc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> monitoring</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.49,words:148},t:"Prometheus",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/14.html",{loader:()=>e.e(4585).then(e.bind(e,159)),meta:{d:1731456e6,l:"November 13, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<ol>\n<li>Elasticsearch:ES is a search-oriented document database that boasts excellent search capabilities and provides a rich set of REST APIs for easy interface calls.</li>\n<li>Kibana:A visualization tool based on ES, which allows for easy visual management and operation of Elasticsearch data.</li>\n<li>Logstash:While Logstash can also be used for log collection, deploying Logstash on every node might be too heavy, so here Filebeat is primarily used for data collection, leaving Logstash to handle data transformation.</li>\n</ol>",r:{minutes:6.55,words:1966},t:"ELK Log Collection",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/15.html",{loader:()=>e.e(4146).then(e.bind(e,349)),meta:{d:17315424e5,l:"November 14, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<h2>Kubernetes Dashboard</h2>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apply</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> recommend.yaml</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> all</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> kubernetes-dashboard</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> wide</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">https://ip:port</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Create account configuration</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">touch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dashboard-admin.yaml</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.42,words:127},t:"Kubernetes UI",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/2.html",{loader:()=>e.e(8936).then(e.bind(e,9471)),meta:{d:17309376e5,l:"November 7, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<ol>\n<li>\n<p>First, on the node, create the directory:\n</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/kubernetes</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p>Then, open the k3s.yaml file:</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/rancher/k3s/k3s.yaml</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/rancher/k3s/k3s.yaml</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>Modify the server address from 127.0.0.1 to the VM\'s IP address.\n</p>\n</li>\n<li>\n<p>Next, transfer the k3s.yaml file to the respective nodes:</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">scp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/rancher/k3s/k3s.yaml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> root@172.16.217.138:/etc/kubernetes/admin.conf</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">scp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/rancher/k3s/k3s.yaml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> root@172.16.217.139:/etc/kubernetes/admin.conf</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>On the node, configure the kubeconfig file by running:</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "export KUBECONFIG=/etc/kubernetes/admin.conf"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">~/.bashrc</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ~/.bashrc</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nodes</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>',r:{minutes:.36,words:109},t:"How to Enable kubectl on Node Nodes",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/3.html",{loader:()=>e.e(7199).then(e.bind(e,1708)),meta:{d:17309376e5,l:"November 7, 2024",c:["Learning Records"],g:["Kubernetes"],e:"\n<p><code>kubectl</code> is the command-line tool used to interact with Kubernetes clusters. Here are some of the most commonly used commands:</p>\n<h2>1. <code>kubectl get</code></h2>\n<p>The <code>get</code> command retrieves information about resources such as pods, services, deployments, etc.</p>\n",r:{minutes:.9,words:271},t:"Kubectl Basic Commands",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/4.html",{loader:()=>e.e(8738).then(e.bind(e,4995)),meta:{d:1731024e6,l:"November 8, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<div class="hint-container info">\n<p class="hint-container-title">Info</p>\n<p>In YAML, the <code>-</code> symbol is used when a key contains a list (multiple items). In your example, <code>env</code> is a list, and each environment variable (a combination of <code>name</code> and <code>value</code>) is an object in the <code>env</code> list. Therefore, you need to use <code>-</code> before each environment variable.</p>\n</div>',r:{minutes:2.94,words:883},t:"Pods",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/5.html",{loader:()=>e.e(6153).then(e.bind(e,1538)),meta:{d:17311104e5,l:"November 9, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<h2>Label and Selector</h2>\n<h3>Check label</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> po</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --show-labels</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">NAME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">         READY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   STATUS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    RESTARTS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   AGE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   LABELS</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nginx-demo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   1/1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">     Running</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">   0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">          23h</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   type=app,version=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0.0</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:3.03,words:910},t:"Label,Selector,and Deployment",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/6.html",{loader:()=>e.e(3492).then(e.bind(e,1005)),meta:{d:17311104e5,l:"November 9, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<div class="hint-container info">\n<p class="hint-container-title">Info</p>\n<h3>Stateless application does not create dependencies on the local system, while stateful does.</h3>\n</div>\n<h3>Create new stateful set</h3>\n<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">---</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">apiVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">v1</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Service</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  labels</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">web</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  clusterIP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">None</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  selector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">---</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">apiVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">apps/v1</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">StatefulSet</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">web</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  serviceName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"nginx"</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  replicas</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  selector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    matchLabels</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      labels</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      containers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx:latest</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">containerPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">web</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.68,words:205},t:"StatefulSet",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/7.html",{loader:()=>e.e(8955).then(e.bind(e,3589)),meta:{d:17311104e5,l:"November 9, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<h2>DaemonSet</h2>\n<h4>Through configuration, add daemonSet automatically</h4>\n<h2>Example</h2>\n<h3>Give Node a Label</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> label</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nodes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> k8s-node1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> svc_type=microsvc</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.61,words:184},t:"DaemonSet and HPA",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/8.html",{loader:()=>e.e(670).then(e.bind(e,7400)),meta:{d:17312832e5,l:"November 11, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<h2>Service is for East-West Traffic, Ingress is for North-South Traffic</h2>\n<h3>Service is used for communication among different microservices</h3>\n<h3>Endpoints manage and maintain pointed IP</h3>\n<figure><figcaption>service.png</figcaption></figure>\n<h3>Service Configuration</h3>\n<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">apiVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">v1</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Service</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx-svc</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  labels</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx-svc</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">http</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # Name of the service port configuration</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      protocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">TCP</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # Protocol used for port binding, supports TCP, UDP, SCTP; defaults to TCP</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # The service\'s port</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      targetPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9527</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # The target pod\'s port</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">https</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">443</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      protocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">TCP</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      targetPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">443</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  selector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Select which pods the current service will match and proxy traffic to</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nginx</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.88,words:564},t:"Service and Ingress",i:"pen-to-square",y:"a"}}],["/posts/kubernetes/practices/9.html",{loader:()=>e.e(4421).then(e.bind(e,1820)),meta:{d:17313696e5,l:"November 12, 2024",c:["Learning Records"],g:["Kubernetes"],e:'\n<h2>ConfigMap</h2>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -h</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # Check the configuration information</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.82,words:247},t:"Configuration management",i:"pen-to-square",y:"a"}}],["/zh/posts/java8/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B.html",{loader:()=>e.e(1155).then(e.bind(e,1813)),meta:{d:17358624e5,l:"2025年1月3日",c:["学习笔记"],g:["java8"],e:"\n<h1>一. 道之伊始</h1>\n<p>宇宙初开之际，混沌之气笼罩着整个宇宙，一切模糊不清。</p>\n<p>然后，盘古开天，女娲造人：日月乃出、星辰乃现，山川蜿蜒、江河奔流、生灵万物，欣欣向荣。此日月、星辰、山川、江河、生灵万物，谓之【对象】，皆随时间而化。</p>\n<p>然而：日月之行、星汉灿烂、山川起伏、湖海汇聚，冥冥中有至理藏其中。名曰【道】，乃万物遵循之规律，亦谓之【函数】，它无问东西，亘古不变</p>\n<p>作为<strong>设计宇宙洪荒</strong>的程序员</p>\n<ul>\n<li>造日月、筑山川、划江河、开湖海、演化生灵万物、令其生生不息，则必用面向【对象】之手段</li>\n<li>若定规则、求本源、追纯粹，论不变，则当选【函数】编程之思想</li>\n</ul>",r:{minutes:40.56,words:12167},t:"函数式编程",i:"pen-to-square",y:"a"}}],["/zh/posts/netty/Netty01-nio.html",{loader:()=>e.e(6354).then(e.bind(e,8350)),meta:{d:17373312e5,l:"2025年1月20日",c:["学习笔记"],g:["nio"],e:'\n<p>non-blocking io 非阻塞 IO</p>\n<h2>1. 三大组件</h2>\n<h3>1.1 Channel &amp; Buffer</h3>\n<p>channel 有一点类似于 stream，它就是读写数据的<strong>双向通道</strong>，可以从 channel 将数据读入 buffer，也可以将 buffer 的数据写入 channel，而之前的 stream 要么是输入，要么是输出，channel 比 stream 更为底层</p>\n<div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">graph LR</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">channel --&gt; buffer</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">buffer --&gt; channel</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:31.92,words:9577},t:"一. NIO 基础",i:"pen-to-square",y:"a"}}],["/zh/posts/netty/Netty02-intro.html",{loader:()=>e.e(6339).then(e.bind(e,7282)),meta:{d:17376768e5,l:"2025年1月24日",c:["学习笔记"],g:["netty"],e:'\n<h2>1. 概述</h2>\n<h3>1.1 Netty 是什么？</h3>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Netty is an asynchronous event-driven network application framework</span></span>\n<span class="line"><span>for rapid development of maintainable high performance protocol servers &amp; clients.</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:30.54,words:9162},t:"二. Netty 入门",i:"pen-to-square",y:"a"}}],["/zh/posts/netty/Netty03-%E8%BF%9B%E9%98%B6.html",{loader:()=>e.e(8153).then(e.bind(e,7617)),meta:{d:17381088e5,l:"2025年1月29日",c:["学习笔记"],g:["netty"],e:'\n<h2>1. 粘包与半包</h2>\n<h3>1.1 粘包现象</h3>\n<p>服务端代码</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> log </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NioEventLoopGroup</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boss</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> NioEventLoopGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NioEventLoopGroup</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> worker</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> NioEventLoopGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            ServerBootstrap</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ServerBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NioServerSocketChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(boss, worker);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">childHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ChannelInitializer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SocketChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SocketChannel</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> LoggingHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">LogLevel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DEBUG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ChannelInboundHandlerAdapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> channelActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"connected {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channelActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ctx);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> channelInactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"disconnect {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channelInactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ctx);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            });</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            ChannelFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8080</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} binding..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} bound..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">closeFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"server error"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, e);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            boss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">shutdownGracefully</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">shutdownGracefully</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"stoped"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:29.48,words:8844},t:"三. Netty 进阶",i:"pen-to-square",y:"a"}}],["/zh/posts/netty/Netty04-%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html",{loader:()=>e.e(7356).then(e.bind(e,2080)),meta:{d:17385408e5,l:"2025年2月3日",c:["学习笔记"],g:["netty"],e:'\n<h2>1. 优化</h2>\n<h3>1.1 扩展序列化算法</h3>\n<p>序列化，反序列化主要用在消息正文的转换上</p>\n<ul>\n<li>序列化时，需要将 Java 对象变为要传输的数据（可以是 byte[]，或 json 等，最终都需要变成 byte[]）</li>\n<li>反序列化时，需要将传入的正文数据还原成 Java 对象，便于处理</li>\n</ul>\n<p>目前的代码仅支持 Java 自带的序列化，反序列化机制，核心代码如下</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 反序列化</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] body </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[bodyLength]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">byteByf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(body);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ObjectInputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ObjectInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ByteArrayInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(body))</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> message </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (Message) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSequenceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(sequenceId);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 序列化</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ByteArrayOutputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> out </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ByteArrayOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ObjectOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(out)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] bytes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toByteArray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:21.45,words:6434},t:"四. 优化与源码",i:"pen-to-square",y:"a"}}],["/zh/posts/nginx/1.html",{loader:()=>e.e(7249).then(e.bind(e,3295)),meta:{d:17407008e5,l:"2025年2月28日",c:["Learning Records"],g:["Nginx"],e:"\n<h1>第一部分：扩容</h1>\n<p>通过扩容提升整体吞吐量</p>\n<h2>1.单机垂直扩容：硬件资源增加</h2>\n<h3>云服务资源增加</h3>\n<h3>整机：IBM、浪潮、DELL、HP等</h3>\n<h3>CPU/主板：更新到主流</h3>\n<h3>网卡：10G/40G网卡</h3>\n<h3>磁盘：SAS(SCSI) HDD（机械）、HHD（混合）、SATA SSD、PCI-e SSD、 MVMe SSD</h3>\n<h4>SSD</h4>\n<p>多副本机制\n适合系统盘/热点数据/数据库存储</p>\n<h4>HDD</h4>\n<p>适合冷数据存储</p>\n<h2>2.水平扩展：集群化</h2>",r:{minutes:43.27,words:12980},t:"Nginx高级",i:"pen-to-square",y:"a"}}],["/404.html",{loader:()=>e.e(7490).then(e.bind(e,1489)),meta:{t:""}}],["/posts/",{loader:()=>e.e(8666).then(e.bind(e,444)),meta:{t:"Posts"}}],["/posts/aws-saa/",{loader:()=>e.e(9062).then(e.bind(e,720)),meta:{t:"Aws Saa"}}],["/posts/algorithm/",{loader:()=>e.e(944).then(e.bind(e,6945)),meta:{t:"Algorithm"}}],["/posts/clich%C3%A9/",{loader:()=>e.e(6715).then(e.bind(e,7396)),meta:{t:"Cliché"}}],["/posts/cmb/",{loader:()=>e.e(3567).then(e.bind(e,2021)),meta:{t:"Cmb"}}],["/posts/docker/",{loader:()=>e.e(5031).then(e.bind(e,2533)),meta:{t:"Docker"}}],["/posts/dubbo/",{loader:()=>e.e(2833).then(e.bind(e,2230)),meta:{t:"Dubbo"}}],["/posts/elasticsearch/",{loader:()=>e.e(8654).then(e.bind(e,1244)),meta:{t:"Elasticsearch"}}],["/posts/interview/",{loader:()=>e.e(238).then(e.bind(e,5765)),meta:{t:"Interview"}}],["/posts/istio/",{loader:()=>e.e(5537).then(e.bind(e,728)),meta:{t:"Istio"}}],["/posts/mybatis/",{loader:()=>e.e(5688).then(e.bind(e,786)),meta:{t:"Mybatis"}}],["/posts/nextjs/",{loader:()=>e.e(8797).then(e.bind(e,6566)),meta:{t:"Nextjs"}}],["/posts/nginx/",{loader:()=>e.e(4741).then(e.bind(e,8076)),meta:{t:"Nginx"}}],["/posts/typescript/",{loader:()=>e.e(3504).then(e.bind(e,5645)),meta:{t:"Typescript"}}],["/posts/unimelb/",{loader:()=>e.e(3911).then(e.bind(e,1864)),meta:{t:"Unimelb"}}],["/zh/posts/",{loader:()=>e.e(9773).then(e.bind(e,2269)),meta:{t:"Posts"}}],["/posts/kubernetes/concepts/",{loader:()=>e.e(7389).then(e.bind(e,6196)),meta:{t:"Concepts"}}],["/posts/kubernetes/",{loader:()=>e.e(6607).then(e.bind(e,6276)),meta:{t:"Kubernetes"}}],["/posts/kubernetes/microsvc/",{loader:()=>e.e(9070).then(e.bind(e,3118)),meta:{t:"Microsvc"}}],["/posts/kubernetes/practices/",{loader:()=>e.e(7738).then(e.bind(e,2621)),meta:{t:"Practices"}}],["/zh/posts/java8/",{loader:()=>e.e(4850).then(e.bind(e,9174)),meta:{t:"Java8"}}],["/zh/posts/netty/",{loader:()=>e.e(6158).then(e.bind(e,4212)),meta:{t:"Netty"}}],["/zh/posts/nginx/",{loader:()=>e.e(3894).then(e.bind(e,8411)),meta:{t:"Nginx"}}],["/category/",{loader:()=>e.e(3583).then(e.bind(e,3233)),meta:{t:"Category",I:!1}}],["/category/genesis/",{loader:()=>e.e(2450).then(e.bind(e,9444)),meta:{t:"Genesis Category",I:!1}}],["/category/learning-records/",{loader:()=>e.e(5157).then(e.bind(e,189)),meta:{t:"Learning Records Category",I:!1}}],["/category/internship-journal/",{loader:()=>e.e(4368).then(e.bind(e,9244)),meta:{t:"Internship journal Category",I:!1}}],["/zh/category/",{loader:()=>e.e(86).then(e.bind(e,888)),meta:{t:"分类",I:!1}}],["/zh/category/%E5%BC%80%E5%A7%8B/",{loader:()=>e.e(1098).then(e.bind(e,535)),meta:{t:"开始 分类",I:!1}}],["/zh/category/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",{loader:()=>e.e(4601).then(e.bind(e,5320)),meta:{t:"学习笔记 分类",I:!1}}],["/zh/category/learning-records/",{loader:()=>e.e(1882).then(e.bind(e,3892)),meta:{t:"Learning Records 分类",I:!1}}],["/tag/",{loader:()=>e.e(1797).then(e.bind(e,3332)),meta:{t:"Tag",I:!1}}],["/tag/resume/",{loader:()=>e.e(6217).then(e.bind(e,4236)),meta:{t:"Tag: Resume",I:!1}}],["/tag/aws-saa/",{loader:()=>e.e(3001).then(e.bind(e,6799)),meta:{t:"Tag: AWS SAA",I:!1}}],["/tag/leetcode/",{loader:()=>e.e(6701).then(e.bind(e,9500)),meta:{t:"Tag: LeetCode",I:!1}}],["/tag/algorithm-practices/",{loader:()=>e.e(7772).then(e.bind(e,2303)),meta:{t:"Tag: Algorithm Practices",I:!1}}],["/tag/programmer-clich%C3%A9/",{loader:()=>e.e(2577).then(e.bind(e,4059)),meta:{t:"Tag: Programmer cliché",I:!1}}],["/tag/china-merchant-bank/",{loader:()=>e.e(9497).then(e.bind(e,4508)),meta:{t:"Tag: China Merchant Bank",I:!1}}],["/tag/docker/",{loader:()=>e.e(4446).then(e.bind(e,5384)),meta:{t:"Tag: Docker",I:!1}}],["/tag/dubbo/",{loader:()=>e.e(4894).then(e.bind(e,5853)),meta:{t:"Tag: Dubbo",I:!1}}],["/tag/es/",{loader:()=>e.e(4590).then(e.bind(e,8184)),meta:{t:"Tag: ES",I:!1}}],["/tag/technical-interview/",{loader:()=>e.e(4771).then(e.bind(e,1308)),meta:{t:"Tag: Technical Interview",I:!1}}],["/tag/istio/",{loader:()=>e.e(1458).then(e.bind(e,2875)),meta:{t:"Tag: Istio",I:!1}}],["/tag/mybatis/",{loader:()=>e.e(3223).then(e.bind(e,5115)),meta:{t:"Tag: MyBatis",I:!1}}],["/tag/react/",{loader:()=>e.e(2477).then(e.bind(e,1764)),meta:{t:"Tag: React",I:!1}}],["/tag/nextjs/",{loader:()=>e.e(5204).then(e.bind(e,7688)),meta:{t:"Tag: NextJS",I:!1}}],["/tag/javascript/",{loader:()=>e.e(9225).then(e.bind(e,5527)),meta:{t:"Tag: Javascript",I:!1}}],["/tag/nginx/",{loader:()=>e.e(14).then(e.bind(e,2912)),meta:{t:"Tag: Nginx",I:!1}}],["/tag/typescript/",{loader:()=>e.e(217).then(e.bind(e,1246)),meta:{t:"Tag: Typescript",I:!1}}],["/tag/unimelb/",{loader:()=>e.e(2564).then(e.bind(e,8108)),meta:{t:"Tag: Unimelb",I:!1}}],["/tag/kubernetes/",{loader:()=>e.e(2582).then(e.bind(e,8471)),meta:{t:"Tag: Kubernetes",I:!1}}],["/zh/tag/",{loader:()=>e.e(5230).then(e.bind(e,683)),meta:{t:"标签",I:!1}}],["/zh/tag/%E7%AE%80%E5%8E%86/",{loader:()=>e.e(2277).then(e.bind(e,4717)),meta:{t:"标签: 简历",I:!1}}],["/zh/tag/%E6%97%85%E7%A8%8B/",{loader:()=>e.e(2903).then(e.bind(e,4047)),meta:{t:"标签: 旅程",I:!1}}],["/zh/tag/java8/",{loader:()=>e.e(9617).then(e.bind(e,2968)),meta:{t:"标签: java8",I:!1}}],["/zh/tag/nio/",{loader:()=>e.e(7147).then(e.bind(e,5698)),meta:{t:"标签: nio",I:!1}}],["/zh/tag/netty/",{loader:()=>e.e(6689).then(e.bind(e,8189)),meta:{t:"标签: netty",I:!1}}],["/zh/tag/nginx/",{loader:()=>e.e(889).then(e.bind(e,2024)),meta:{t:"标签: Nginx",I:!1}}],["/article/",{loader:()=>e.e(7511).then(e.bind(e,2772)),meta:{t:"Articles",I:!1}}],["/zh/article/",{loader:()=>e.e(716).then(e.bind(e,6654)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>e.e(9580).then(e.bind(e,353)),meta:{t:"Star",I:!1}}],["/zh/star/",{loader:()=>e.e(7774).then(e.bind(e,5588)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>e.e(5464).then(e.bind(e,4695)),meta:{t:"Timeline",I:!1}}],["/zh/timeline/",{loader:()=>e.e(8229).then(e.bind(e,903)),meta:{t:"时间轴",I:!1}}]])},8761:(s,i,e)=>{e.d(i,{U:()=>n});const n=JSON.parse('{"base":"/personalweb/","lang":"en-US","title":"","description":"","head":[],"locales":{"/":{"lang":"en-US","title":"Richard Chen","description":"Richard Chen\'s personal blog"},"/zh/":{"lang":"zh-CN","title":"Richard Chen","description":"若尘的博客"}}}')},6653:(s,i,e)=>{e.d(i,{K:()=>n});const n=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$IifoPMRVcA9LszL1IhbRaO9jYtIMiJBEhuklzQaZAbew9Xu36/Heq"],"/zh/demo/encrypt.html":["$2a$10$j4vrX0Yi3miFrF2WI.0vMeQ15E7Cm5GiSgooPKgSfomKCfR8phsRW"]}},"author":{"name":"Richard Chen"},"logo":"https://em-content.zobj.net/source/apple/391/thinking-face_1f914.png","fullscreen":true,"docsDir":"src","blog":{"medias":{"Linkedin":"https://www.linkedin.com/in/ruochen-chen-35325a30a/","GitHub":"https://github.com/Crc011220","Gitlab":"https://gitlab.com/ruocchen1220","Gmail":"mailto:ruocchen1220@gmail.com","Steam":"https://steamcommunity.com/profiles/76561198799729482/"}},"locales":{"/zh/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/zh/",{"text":"笔记","icon":"pen-to-square","prefix":"/zh/posts/","children":[{"text":"Java8特性","icon":"pen-to-square","prefix":"java8/","children":[{"text":"函数式编程","icon":"pen-to-square","link":"函数式编程"}]},{"text":"Netty","icon":"pen-to-square","prefix":"netty/","children":[{"text":"Nio介绍","icon":"pen-to-square","link":"Netty01-nio"},{"text":"Netty入门","icon":"pen-to-square","link":"Netty02-intro"},{"text":"Netty进阶","icon":"pen-to-square","link":"Netty03-进阶"},{"text":"Netty优化","icon":"pen-to-square","link":"Netty04-优化与源码"}]},{"text":"NGINX","icon":"pen-to-square","prefix":"nginx/","children":[{"text":"NGINX 高级","icon":"pen-to-square","link":"1"}]}]}],"sidebar":{"/zh/":["",{"text":"笔记","icon":"book","prefix":"posts/","children":"structure"},"intro"]},"footer":"学海无涯","displayFooter":true,"blog":{"description":"墨尔本大学计算机在读学生","intro":"/zh/intro.html"}},"/":{"lang":"en-US","navbarLocales":{"langName":"English","selectLangAriaLabel":"Select language"},"metaLocales":{"author":"Author","date":"Writing Date","origin":"Original","views":"Page views","category":"Category","tag":"Tag","readingTime":"Reading Time","words":"Words","toc":"On This Page","prev":"Prev","next":"Next","lastUpdated":"Last update","contributors":"Contributors","editLink":"Edit this page on GitHub","print":"Print"},"blogLocales":{"article":"Articles","articleList":"Article List","category":"Category","tag":"Tag","timeline":"Timeline","timelineTitle":"Yesterday Once More!","all":"All","intro":"Personal Intro","star":"Star","empty":"No $text"},"paginationLocales":{"prev":"Prev","next":"Next","navigate":"Jump to","action":"Go","errorText":"Please enter a number between 1 and $page !"},"outlookLocales":{"themeColor":"Theme Color","darkmode":"Theme Mode","fullscreen":"Full Screen"},"encryptLocales":{"iconLabel":"Page Encrypted","placeholder":"Enter password","remember":"Remember password","errorHint":"Please enter the correct password!"},"routeLocales":{"skipToContent":"Skip to main content","notFoundTitle":"Page not found","notFoundMsg":["There’s nothing here.","How did we get here?","That’s a Four-Oh-Four.","Looks like we\'ve got some broken links."],"back":"Go back","home":"Take me home"},"navbar":["/",{"text":"Posts","icon":"pen-to-square","prefix":"/posts/","children":[{"text":"Algorithm","icon":"pen-to-square","prefix":"algorithm/","children":[{"text":"LeetCode Q3","icon":"pen-to-square","link":"1"},{"text":"LeetCode Q5","icon":"pen-to-square","link":"2"},{"text":"LeetCode Q9","icon":"pen-to-square","link":"3"},{"text":"LeetCode Q14","icon":"pen-to-square","link":"4"},{"text":"LeetCode Q15","icon":"pen-to-square","link":"5"},{"text":"LeetCode Q17","icon":"pen-to-square","link":"6"},{"text":"LeetCode Q19","icon":"pen-to-square","link":"7"},{"text":"LeetCode Q24","icon":"pen-to-square","link":"8"},{"text":"LeetCode Q26","icon":"pen-to-square","link":"9"},{"text":"Eratosthenes","icon":"pen-to-square","link":"10"},{"text":"Find the Integer sqrt","icon":"pen-to-square","link":"11"},{"text":"Reverse a linkedList","icon":"pen-to-square","link":"12"},{"text":"The biggest product of three numbers","icon":"pen-to-square","link":"13"},{"text":"Fibonacci","icon":"pen-to-square","link":"14"},{"text":"Cycle linkedList","icon":"pen-to-square","link":"15"},{"text":"Combine two sequenced arrays","icon":"pen-to-square","link":"16"},{"text":"The max depth of a binary tree","icon":"pen-to-square","link":"17"},{"text":"Longest Continuous Increasing Subsequence, LCIS","icon":"pen-to-square","link":"18"},{"text":"KMP Algorithm","icon":"pen-to-square","link":"19"},{"text":"Distributed Consistency Algorithms","icon":"pen-to-square","link":"20"},{"text":"Question 146","icon":"pen-to-square","link":"21"}]},{"text":"AWS-SAA","icon":"pen-to-square","prefix":"aws-saa/","children":[{"text":"Part 1","icon":"pen-to-square","link":"1"},{"text":"Part 2","icon":"pen-to-square","link":"2"},{"text":"Udemy Course","icon":"pen-to-square","link":"3"}]},{"text":"Cliché","icon":"pen-to-square","prefix":"cliché/","children":[{"text":"Differences between @Autowired and @Resource","icon":"pen-to-square","link":"1"},{"text":"B-Tree vs. B+ Tree in MySQL InnoDB","icon":"pen-to-square","link":"2"},{"text":"MyBatis: Difference between `#` and `*`","icon":"pen-to-square","link":"3"},{"text":"Commonly Used Spring Annotations","icon":"pen-to-square","link":"4"},{"text":"Spring IOC (Inversion of Control)","icon":"pen-to-square","link":"5"},{"text":"Horizontal and Vertical Scaling","icon":"pen-to-square","link":"6"},{"text":"Java Reflection Mechanism","icon":"pen-to-square","link":"7"},{"text":"MySQL Transaction Properties and Isolation Levels","icon":"pen-to-square","link":"8"},{"text":"Redis Persistence Methods","icon":"pen-to-square","link":"9"},{"text":"Pessimistic Locking vs Optimistic Locking","icon":"pen-to-square","link":"10"},{"text":"Differences Between Local Storage, Cookies, Sessions, and Token","icon":"pen-to-square","link":"11"},{"text":"BitMap","icon":"pen-to-square","link":"12"},{"text":"BIO, NIO, AIO","icon":"pen-to-square","link":"13"}]},{"text":"China Merchant Bank","icon":"pen-to-square","prefix":"cmb/","children":[{"text":"Week 1","icon":"pen-to-square","link":"1"},{"text":"Week 2","icon":"pen-to-square","link":"2"},{"text":"Week 3","icon":"pen-to-square","link":"3"},{"text":"Week 4","icon":"pen-to-square","link":"4"},{"text":"Week 5","icon":"pen-to-square","link":"5"},{"text":"Week 6","icon":"pen-to-square","link":"6"},{"text":"Week 7","icon":"pen-to-square","link":"7"},{"text":"Week 8","icon":"pen-to-square","link":"8"},{"text":"Week 9","icon":"pen-to-square","link":"9"}]},{"text":"Dubbo","icon":"pen-to-square","prefix":"dubbo/","children":[{"text":"Concepts in Distributed Systems","icon":"pen-to-square","link":"1"},{"text":"Dubbo Architecture","icon":"pen-to-square","link":"2"}]},{"text":"Docker","icon":"pen-to-square","prefix":"docker/","children":[{"text":"Docker Volumes","icon":"pen-to-square","link":"1"}]},{"text":"ElasticSearch","icon":"pen-to-square","prefix":"elasticsearch/","children":[{"text":"Concepts","icon":"pen-to-square","link":"1"}]},{"text":"Interview","icon":"pen-to-square","prefix":"interview/","children":[{"text":"MySQL","icon":"pen-to-square","link":"1"},{"text":"SSM","icon":"pen-to-square","link":"2"},{"text":"MicroServices and SpringCloud","icon":"pen-to-square","link":"3"},{"text":"Redis","icon":"pen-to-square","link":"4"},{"text":"Message Queue","icon":"pen-to-square","link":"5"},{"text":"Java Collections","icon":"pen-to-square","link":"6"},{"text":"Java Concurrent Programming","icon":"pen-to-square","link":"7"},{"text":"JVM","icon":"pen-to-square","link":"8"},{"text":"Others","icon":"pen-to-square","link":"9"}]},{"text":"Kubernetes","icon":"pen-to-square","prefix":"kubernetes/","children":[{"text":"Concepts","icon":"pen-to-square","link":"concepts/1"},{"text":"Practices","icon":"pen-to-square","link":"practices/1"},{"text":"MicroSvc","icon":"pen-to-square","link":"microsvc/1"}]},{"text":"MyBatis","icon":"pen-to-square","prefix":"mybatis/","children":[{"text":"MyBatis","icon":"pen-to-square","link":"1"},{"text":"MyBatis-Plus","icon":"pen-to-square","link":"2"}]},{"text":"NextJS","icon":"pen-to-square","prefix":"nextjs/","children":[{"text":"React Hook","icon":"pen-to-square","link":"1"},{"text":"File-Based Routing","icon":"pen-to-square","link":"2"},{"text":"Vanilla Javascript Method","icon":"pen-to-square","link":"3"},{"text":"Understanding `.module.css` in Next.js","icon":"pen-to-square","link":"4"},{"text":"SSR and SSG","icon":"pen-to-square","link":"5"},{"text":"Other Features","icon":"pen-to-square","link":"6"},{"text":"API Routes in NextJS","icon":"pen-to-square","link":"7"},{"text":"React Context API","icon":"pen-to-square","link":"8"}]},{"text":"NGINX","icon":"pen-to-square","prefix":"nginx/","children":[{"text":"Basic","icon":"pen-to-square","link":"1"},{"text":"Advanced","icon":"pen-to-square","link":"2"}]},{"text":"Unimelb Notes","icon":"pen-to-square","prefix":"unimelb/","children":[{"text":"SWEN90016","icon":"pen-to-square","link":"1"},{"text":"COMP90048","icon":"pen-to-square","link":"2"},{"text":"COMP90049","icon":"pen-to-square","link":"3"},{"text":"COMP90050","icon":"pen-to-square","link":"4"},{"text":"COMP90024","icon":"pen-to-square","link":"5"}]},{"text":"Typescript","icon":"pen-to-square","prefix":"typescript/","children":[{"text":"Quick Start","icon":"pen-to-square","link":"1"},{"text":"Object-Oriented","icon":"pen-to-square","link":"2"},{"text":"Decorators","icon":"pen-to-square","link":"3"}]}]}],"sidebar":{"/":["",{"text":"Posts","icon":"book","prefix":"posts/","children":"structure"},"intro"]},"footer":"Learning today, leading tomorrow","displayFooter":true,"blog":{"description":"An IT Student @ University of Melbourne","intro":"/intro.html"}}}}')},4923:(s,i,e)=>{},8123:(s,i,e)=>{e.d(i,{v:()=>n});const n={"/zh/posts/":[{text:"Java8",prefix:"java8/",collapsible:!0,children:["函数式编程"]},{text:"Netty",prefix:"netty/",collapsible:!0,children:["Netty01-nio","Netty03-进阶","Netty02-intro","Netty04-优化与源码"]},{text:"Nginx",prefix:"nginx/",collapsible:!0,children:["1"]},"genesis"],"/posts/":[{text:"Algorithm",prefix:"algorithm/",collapsible:!0,children:["16","15","20","10","14","11","19","18","1","2","3","4","5","6","7","8","9","21","12","13","17"]},{text:"Aws Saa",prefix:"aws-saa/",collapsible:!0,children:["3","1","2"]},{text:"Cliché",prefix:"cliché/",collapsible:!0,children:["2","13","4","1","11","14","6","12","7","3","8","10","9","15","5"]},{text:"Cmb",prefix:"cmb/",collapsible:!0,children:["1","2","3","4","5","6","7","8","9"]},{text:"Docker",prefix:"docker/",collapsible:!0,children:["1"]},{text:"Dubbo",prefix:"dubbo/",collapsible:!0,children:["1","2"]},{text:"Elasticsearch",prefix:"elasticsearch/",collapsible:!0,children:["1","2"]},"genesis",{text:"Interview",prefix:"interview/",collapsible:!0,children:["6","7","8","5","3","1","9","4","2"]},{text:"Istio",prefix:"istio/",collapsible:!0,children:["1"]},{text:"Kubernetes",prefix:"kubernetes/",collapsible:!0,children:[{text:"Concepts",prefix:"concepts/",collapsible:!0,children:["3","1","5","4","2","7","6"]},{text:"Microsvc",prefix:"microsvc/",collapsible:!0,children:["1"]},{text:"Practices",prefix:"practices/",collapsible:!0,children:["11","9","7","14","12","2","3","15","5","10","4","13","8","1","6"]}]},{text:"Mybatis",prefix:"mybatis/",collapsible:!0,children:["2","1"]},{text:"Nextjs",prefix:"nextjs/",collapsible:!0,children:["7","2","6","8","1","5","4","3"]},{text:"Nginx",prefix:"nginx/",collapsible:!0,children:["2","1"]},{text:"Typescript",prefix:"typescript/",collapsible:!0,children:["1","2","3"]},{text:"Unimelb",prefix:"unimelb/",collapsible:!0,children:["4","5","2","3","1"]}]}},2878:(s,i,e)=>{e.d(i,{P:()=>n});const n={Linkedin:'<svg xmlns="http://www.w3.org/2000/svg" class="icon linkedin-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#4376B1"/><path fill="#F1F2F2" d="M838.301 555.94v225.157h-130.54V571.03c0-52.746-18.847-88.766-66.112-88.766-36.069 0-57.496 24.25-66.959 47.732-3.436 8.391-4.322 20.045-4.322 31.814v219.277h-130.55s1.752-355.784 0-392.613h130.56v55.637c-.263.438-.633.867-.867 1.285h.866v-1.285c17.349-26.694 48.287-64.856 117.651-64.856 85.884 0 150.273 56.114 150.273 176.685zm-535.05-356.72c-44.655 0-73.87 29.314-73.87 67.826 0 37.695 28.368 67.855 72.157 67.855h.847c45.532 0 73.842-30.16 73.842-67.855-.866-38.512-28.31-67.825-72.975-67.825zM237.14 781.098h130.5V388.474h-130.5v392.623z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Gitlab:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitlab-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#E8F0FF"/><path fill="#E24329" d="m512 808 110-340H402z"/><path fill="#FC6D26" d="M512 808 402 468H247z"/><path fill="#E24329" d="M247 468h155l-67-204c-4-11-19-11-22 0z"/><path fill="#FC6D26" d="m512 808 110-340h156z"/><path fill="#FCA326" d="m778 468 33 104c3 10-1 19-9 25L512 808z"/><path fill="#E24329" d="M778 468H622l68-204c3-11 18-11 21 0z"/><path fill="#FCA326" d="M512 808 222 597c-8-5-12-16-9-25l34-104z"/></svg>',Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>',Steam:'<svg xmlns="http://www.w3.org/2000/svg" class="icon steam-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="488" fill="#fff"/><path fill="#13227a" d="M1008 512c0 274-222.4 496-496.8 496-227.6 0-419.2-152.6-478-360.8l190.4 78.6c12.8 64.2 69.8 112.8 137.8 112.8 78.4 0 143.8-64.8 140.4-147l169-120.4c104.2 2.6 191.6-81.8 191.6-187 0-103.2-84-187-187.4-187s-187.4 84-187.4 187v2.4L369.2 558c-31-1.8-61.4 6.8-87 24.2L16 472.2C36.4 216.8 250.2 16 511.2 16 785.6 16 1008 238 1008 512zM327.4 768.6l-61-25.2a105.58 105.58 0 0 0 54.4 51.6c53.8 22.4 115.6-3.2 138-56.8 10.8-26 11-54.6.2-80.6-10.8-26-31-46.4-57-57.2-25.8-10.8-53.4-10.4-77.8-1.2l63 26c39.6 16.4 58.4 61.8 41.8 101.4-16.6 39.8-62 58.4-101.6 42zM675 508.8c-68.8 0-124.8-56-124.8-124.6s56-124.6 124.8-124.6 124.8 56 124.8 124.6S744 508.8 675 508.8zm.2-31.2c51.8 0 93.8-42 93.8-93.6 0-51.8-42-93.6-93.8-93.6s-93.8 42-93.8 93.6c.2 51.6 42.2 93.6 93.8 93.6z"/></svg>'}}},s=>{s.O(0,[2443,9431],(()=>s(s.s=8731))),s.O()}]);