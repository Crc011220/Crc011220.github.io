"use strict";(self.webpackChunkpersonalweb=self.webpackChunkpersonalweb||[]).push([[429],{3565:(s,i,e)=>{e.r(i),e.d(i,{comp:()=>a,data:()=>l});var n=e(641);const t={},a=(0,e(6262).A)(t,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,i[0]||(i[0]=[(0,n.Fv)('<h1 id="understanding-module-css-in-next-js" tabindex="-1"><a class="header-anchor" href="#understanding-module-css-in-next-js"><span>Understanding <code>.module.css</code> in Next.js</span></a></h1><p>In Next.js, using the <code>.module.css</code> suffix for CSS files enables the CSS Modules feature. CSS Modules allow us to scope styles locally, preventing global naming conflicts. This means that the styles for each component are independent and only effective within that component, enhancing the maintainability and readability of the code.</p><h3 id="benefits-of-css-modules" tabindex="-1"><a class="header-anchor" href="#benefits-of-css-modules"><span>Benefits of CSS Modules</span></a></h3><ul><li><p><strong>Scoped Styles</strong>: Each class name is automatically generated with a unique identifier, ensuring that styles do not conflict between different components. This allows developers to name styles more freely without worrying about affecting other components.</p></li><li><p><strong>Example</strong>: If we define a class named <code>button</code> in one component and another class with the same name in a different component, using CSS Modules will compile these class names into different identifiers, ensuring that their styles do not interfere with each other.</p></li></ul><p>By adopting CSS Modules, developers can create more modular and maintainable styles in their Next.js applications.</p><h3 id="e-g" tabindex="-1"><a class="header-anchor" href="#e-g"><span>e.g.</span></a></h3><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* Button.module.css */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">white</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border-radius: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// components/Button.jsx</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> styles</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;./Button.module.css&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({ </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">children</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">onClick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">styles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> onClick</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">onClick</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">      {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">children</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  );</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, the <code>Button</code> component uses the <code>styles.button</code> class from the <code>Button.module.css</code> file. The class name <code>styles.button</code> is automatically generated by CSS Modules, ensuring that it is unique and does not conflict with other components.</p><p>This approach helps in creating more modular and maintainable styles in Next.js applications.</p>',10)]))}]]),l=JSON.parse('{"path":"/posts/nextjs/4.html","title":"Understanding .module.css in Next.js","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-12-11T00:00:00.000Z","category":["Learning Records"],"tag":["NextJS"],"description":"Understanding .module.css in Next.js In Next.js, using the .module.css suffix for CSS files enables the CSS Modules feature. CSS Modules allow us to scope styles locally, preven...","head":[["meta",{"property":"og:url","content":"https://crc011220.github.io/posts/nextjs/4.html"}],["meta",{"property":"og:site_name","content":"Ruochen Chen"}],["meta",{"property":"og:title","content":"Understanding .module.css in Next.js"}],["meta",{"property":"og:description","content":"Understanding .module.css in Next.js In Next.js, using the .module.css suffix for CSS files enables the CSS Modules feature. CSS Modules allow us to scope styles locally, preven..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-26T14:10:08.000Z"}],["meta",{"property":"article:tag","content":"NextJS"}],["meta",{"property":"article:published_time","content":"2024-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-26T14:10:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Understanding .module.css in Next.js\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-26T14:10:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ruochen Chen\\"}]}"]]},"headers":[{"level":3,"title":"Benefits of CSS Modules","slug":"benefits-of-css-modules","link":"#benefits-of-css-modules","children":[]},{"level":3,"title":"e.g.","slug":"e-g","link":"#e-g","children":[]}],"git":{"createdTime":1734336988000,"updatedTime":1735222208000,"contributors":[{"name":"Ruochen Chen","email":"ruocchen1220@gmail.com","commits":3}]},"readingTime":{"minutes":0.84,"words":252},"filePathRelative":"posts/nextjs/4.md","localizedDate":"December 11, 2024","excerpt":"\\n<p>In Next.js, using the <code>.module.css</code> suffix for CSS files enables the CSS Modules feature. CSS Modules allow us to scope styles locally, preventing global naming conflicts. This means that the styles for each component are independent and only effective within that component, enhancing the maintainability and readability of the code.</p>","autoDesc":true}')},6262:(s,i)=>{i.A=(s,i)=>{const e=s.__vccOpts||s;for(const[s,n]of i)e[s]=n;return e}}}]);