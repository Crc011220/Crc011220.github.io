"use strict";(self.webpackChunkpersonalweb=self.webpackChunkpersonalweb||[]).push([[2015],{1541:(t,d,e)=>{e.r(d),e.d(d,{comp:()=>s,data:()=>r});var n=e(641);const a={},s=(0,e(6262).A)(a,[["render",function(t,d){return(0,n.uX)(),(0,n.CE)("div",null,d[0]||(d[0]=[(0,n.Fv)('<h1 id="位运算" tabindex="-1"><a class="header-anchor" href="#位运算"><span>位运算</span></a></h1><table><thead><tr><th>运算符</th><th>名称</th><th>含义</th><th>示例（十进制）</th><th>说明</th><th></th><th></th><th></th></tr></thead><tbody><tr><td><code>&lt;&lt;</code></td><td>左移</td><td>将二进制向左移动若干位，相当于乘以 <code>2^n</code></td><td><code>3 &lt;&lt; 2 = 12</code></td><td>左移2位，3变成12</td><td></td><td></td><td></td></tr><tr><td><code>&gt;&gt;</code></td><td>右移</td><td>将二进制向右移动若干位，相当于除以 <code>2^n</code></td><td><code>12 &gt;&gt; 2 = 3</code></td><td>右移2位，12变成3</td><td></td><td></td><td></td></tr><tr><td><code>&gt;&gt;&gt;</code></td><td>无符号右移</td><td>右移时最高位补0，忽略符号位</td><td>负数右移时区别较大</td><td>通常对负数做无符号右移用</td><td></td><td></td><td></td></tr><tr><td><code>&amp;</code></td><td>按位与</td><td>两位都是1则结果为1，否则为0</td><td><code>6 &amp; 3 = 2</code></td><td>0110 &amp; 0011 = 0010</td><td></td><td></td><td></td></tr><tr><td><code>|</code></td><td>按位或</td><td>两位有1则结果为1，否则为0</td><td><code>6 | 3 = 7</code></td><td>0110 | 0011 = 0111</td><td></td><td></td><td></td></tr><tr><td><code>^</code></td><td>按位异或</td><td>两位不同为1，相同为0</td><td><code>6 ^ 3 = 5</code></td><td>0110 ^ 0011 = 0101</td><td></td><td></td><td></td></tr><tr><td><code>~</code></td><td>按位取反</td><td>0变1，1变0</td><td><code>~6 = -7</code></td><td>取反后是补码形式</td><td></td><td></td><td></td></tr></tbody></table><hr><h2 id="✅-速记点-1-十进制转非十进制" tabindex="-1"><a class="header-anchor" href="#✅-速记点-1-十进制转非十进制"><span>✅ 速记点 1：<strong>十进制转非十进制</strong></span></a></h2><blockquote><p>🌟 口诀： <strong>整数部分：除 N 取余倒序排；小数部分：乘 N 取整顺序记</strong></p></blockquote><h3 id="✳️-整数部分-除基数-n-取余数-→-倒序输出" tabindex="-1"><a class="header-anchor" href="#✳️-整数部分-除基数-n-取余数-→-倒序输出"><span>✳️ 整数部分：除基数（N）取余数 → 倒序输出</span></a></h3><p>以 <code>十进制 156 转二进制</code> 为例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>156 ÷ 2 = 78 余 0  </span></span>\n<span class="line"><span>78 ÷ 2 = 39 余 0  </span></span>\n<span class="line"><span>39 ÷ 2 = 19 余 1  </span></span>\n<span class="line"><span>19 ÷ 2 = 9  余 1  </span></span>\n<span class="line"><span>9  ÷ 2 = 4  余 1  </span></span>\n<span class="line"><span>4  ÷ 2 = 2  余 0  </span></span>\n<span class="line"><span>2  ÷ 2 = 1  余 0  </span></span>\n<span class="line"><span>1  ÷ 2 = 0  余 1 ✅停</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>倒着写余数：**10011100（二进制）**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="✳️-小数部分-乘基数-n-取整数-→-正序输出" tabindex="-1"><a class="header-anchor" href="#✳️-小数部分-乘基数-n-取整数-→-正序输出"><span>✳️ 小数部分：乘基数（N）取整数 → 正序输出</span></a></h3><p>以 <code>十进制 0.625 转二进制</code> 为例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0.625 × 2 = 1.25 → 整数 1  </span></span>\n<span class="line"><span>0.25  × 2 = 0.5  → 整数 0  </span></span>\n<span class="line"><span>0.5   × 2 = 1.0  → 整数 1 ✅结束</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>写出整数部分：**101（二进制）**</span></span>\n<span class="line"><span>→ 所以 0.625 = 0.101（二进制）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="✅-速记点-2-非十进制转十进制" tabindex="-1"><a class="header-anchor" href="#✅-速记点-2-非十进制转十进制"><span>✅ 速记点 2：<strong>非十进制转十进制</strong></span></a></h2><blockquote><p>🌟 口诀：<strong>每位 × 基数的“位次方”，再求和</strong></p></blockquote><h3 id="✳️-举例-二进制-1011-转十进制" tabindex="-1"><a class="header-anchor" href="#✳️-举例-二进制-1011-转十进制"><span>✳️ 举例：<code>二进制 1011</code> 转十进制</span></a></h3><p>$$ 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0 = 8 + 0 + 2 + 1 = \\boxed{11} $$</p><h3 id="✳️-举例-八进制-157-转十进制" tabindex="-1"><a class="header-anchor" href="#✳️-举例-八进制-157-转十进制"><span>✳️ 举例：<code>八进制 157</code> 转十进制</span></a></h3><p>$$ 1 \\times 8^2 + 5 \\times 8^1 + 7 \\times 8^0 = 64 + 40 + 7 = \\boxed{111} $$</p><hr><h2 id="✅-速记点-3-二-八-十六进制互转" tabindex="-1"><a class="header-anchor" href="#✅-速记点-3-二-八-十六进制互转"><span>✅ 速记点 3：<strong>二/八/十六进制互转</strong></span></a></h2><blockquote><p>🌟 口诀： <strong>一位八进制 = 三位二进制</strong><strong>一位十六进制 = 四位二进制</strong></p></blockquote><h3 id="✳️-八进制-↔-二进制" tabindex="-1"><a class="header-anchor" href="#✳️-八进制-↔-二进制"><span>✳️ 八进制 ↔ 二进制</span></a></h3><table><thead><tr><th>八进制</th><th>二进制</th></tr></thead><tbody><tr><td>0</td><td>000</td></tr><tr><td>1</td><td>001</td></tr><tr><td>2</td><td>010</td></tr><tr><td>7</td><td>111</td></tr></tbody></table><p>举例：<code>八进制 75</code> → 分别转换：7 = 111, 5 = 101 → 所以是二进制：<strong>111101</strong></p><hr><h3 id="✳️-十六进制-↔-二进制" tabindex="-1"><a class="header-anchor" href="#✳️-十六进制-↔-二进制"><span>✳️ 十六进制 ↔ 二进制</span></a></h3><table><thead><tr><th>十六进制</th><th>二进制</th></tr></thead><tbody><tr><td>A</td><td>1010</td></tr><tr><td>B</td><td>1011</td></tr><tr><td>C</td><td>1100</td></tr><tr><td>F</td><td>1111</td></tr></tbody></table><p>举例：<code>十六进制 2F</code> → 2 = 0010，F = 1111 → 所以是二进制：<strong>00101111</strong></p><hr><h2 id="✅-总结整合口诀-超简" tabindex="-1"><a class="header-anchor" href="#✅-总结整合口诀-超简"><span>✅ 总结整合口诀（超简）</span></a></h2><table><thead><tr><th>操作</th><th>口诀</th></tr></thead><tbody><tr><td>十转其他</td><td>整数除基取余倒写，小数乘基取整顺写</td></tr><tr><td>其他转十</td><td>每位 × 基数^位置，累加求和</td></tr><tr><td>八 ↔ 二</td><td>1 位八进制 = 3 位二进制</td></tr><tr><td>十六 ↔ 二</td><td>1 位十六进制 = 4 位二进制</td></tr></tbody></table><hr>',32)]))}]]),r=JSON.parse('{"path":"/zh/posts/algo/%E4%BD%8D%E8%BF%90%E7%AE%97.html","title":"位运算","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-07-06T00:00:00.000Z","category":["Learning Records"],"tag":["Algorithm"],"description":"位运算 ✅ 速记点 1：十进制转非十进制 🌟 口诀： 整数部分：除 N 取余倒序排；小数部分：乘 N 取整顺序记 ✳️ 整数部分：除基数（N）取余数 → 倒序输出 以 十进制 156 转二进制 为例： ✳️ 小数部分：乘基数（N）取整数 → 正序输出 以 十进制 0.625 转二进制 为例： ✅ 速记点 2：非十进制转十进制 🌟 口诀：每位 × 基...","head":[["meta",{"property":"og:url","content":"https://crc011220.github.io/zh/posts/algo/%E4%BD%8D%E8%BF%90%E7%AE%97.html"}],["meta",{"property":"og:site_name","content":"Ruochen Chen"}],["meta",{"property":"og:title","content":"位运算"}],["meta",{"property":"og:description","content":"位运算 ✅ 速记点 1：十进制转非十进制 🌟 口诀： 整数部分：除 N 取余倒序排；小数部分：乘 N 取整顺序记 ✳️ 整数部分：除基数（N）取余数 → 倒序输出 以 十进制 156 转二进制 为例： ✳️ 小数部分：乘基数（N）取整数 → 正序输出 以 十进制 0.625 转二进制 为例： ✅ 速记点 2：非十进制转十进制 🌟 口诀：每位 × 基..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-08T09:24:05.000Z"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:published_time","content":"2025-07-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-08T09:24:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"位运算\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-07-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-08T09:24:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ruochen Chen\\"}]}"]]},"headers":[{"level":2,"title":"✅ 速记点 1：十进制转非十进制","slug":"✅-速记点-1-十进制转非十进制","link":"#✅-速记点-1-十进制转非十进制","children":[{"level":3,"title":"✳️ 整数部分：除基数（N）取余数 → 倒序输出","slug":"✳️-整数部分-除基数-n-取余数-→-倒序输出","link":"#✳️-整数部分-除基数-n-取余数-→-倒序输出","children":[]},{"level":3,"title":"✳️ 小数部分：乘基数（N）取整数 → 正序输出","slug":"✳️-小数部分-乘基数-n-取整数-→-正序输出","link":"#✳️-小数部分-乘基数-n-取整数-→-正序输出","children":[]}]},{"level":2,"title":"✅ 速记点 2：非十进制转十进制","slug":"✅-速记点-2-非十进制转十进制","link":"#✅-速记点-2-非十进制转十进制","children":[{"level":3,"title":"✳️ 举例：二进制 1011 转十进制","slug":"✳️-举例-二进制-1011-转十进制","link":"#✳️-举例-二进制-1011-转十进制","children":[]},{"level":3,"title":"✳️ 举例：八进制 157 转十进制","slug":"✳️-举例-八进制-157-转十进制","link":"#✳️-举例-八进制-157-转十进制","children":[]}]},{"level":2,"title":"✅ 速记点 3：二/八/十六进制互转","slug":"✅-速记点-3-二-八-十六进制互转","link":"#✅-速记点-3-二-八-十六进制互转","children":[{"level":3,"title":"✳️ 八进制 ↔ 二进制","slug":"✳️-八进制-↔-二进制","link":"#✳️-八进制-↔-二进制","children":[]},{"level":3,"title":"✳️ 十六进制 ↔ 二进制","slug":"✳️-十六进制-↔-二进制","link":"#✳️-十六进制-↔-二进制","children":[]}]},{"level":2,"title":"✅ 总结整合口诀（超简）","slug":"✅-总结整合口诀-超简","link":"#✅-总结整合口诀-超简","children":[]}],"git":{"createdTime":1751966645000,"updatedTime":1751966645000,"contributors":[{"name":"Ruochen Chen","email":"ruocchen1220@gmail.com","commits":1}]},"readingTime":{"minutes":2.26,"words":678},"filePathRelative":"zh/posts/algo/位运算.md","localizedDate":"2025年7月6日","excerpt":"\\n<table>\\n<thead>\\n<tr>\\n<th>运算符</th>\\n<th>名称</th>\\n<th>含义</th>\\n<th>示例（十进制）</th>\\n<th>说明</th>\\n<th></th>\\n<th></th>\\n<th></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>&lt;&lt;</code></td>\\n<td>左移</td>\\n<td>将二进制向左移动若干位，相当于乘以 <code>2^n</code></td>\\n<td><code>3 &lt;&lt; 2 = 12</code></td>\\n<td>左移2位，3变成12</td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>&gt;&gt;</code></td>\\n<td>右移</td>\\n<td>将二进制向右移动若干位，相当于除以 <code>2^n</code></td>\\n<td><code>12 &gt;&gt; 2 = 3</code></td>\\n<td>右移2位，12变成3</td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>&gt;&gt;&gt;</code></td>\\n<td>无符号右移</td>\\n<td>右移时最高位补0，忽略符号位</td>\\n<td>负数右移时区别较大</td>\\n<td>通常对负数做无符号右移用</td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>&amp;</code></td>\\n<td>按位与</td>\\n<td>两位都是1则结果为1，否则为0</td>\\n<td><code>6 &amp; 3 = 2</code></td>\\n<td>0110 &amp; 0011 = 0010</td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>|</code></td>\\n<td>按位或</td>\\n<td>两位有1则结果为1，否则为0</td>\\n<td><code>6 | 3 = 7</code></td>\\n<td>0110 | 0011 = 0111</td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>^</code></td>\\n<td>按位异或</td>\\n<td>两位不同为1，相同为0</td>\\n<td><code>6 ^ 3 = 5</code></td>\\n<td>0110 ^ 0011 = 0101</td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>~</code></td>\\n<td>按位取反</td>\\n<td>0变1，1变0</td>\\n<td><code>~6 = -7</code></td>\\n<td>取反后是补码形式</td>\\n<td></td>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}')},6262:(t,d)=>{d.A=(t,d)=>{const e=t.__vccOpts||t;for(const[t,n]of d)e[t]=n;return e}}}]);