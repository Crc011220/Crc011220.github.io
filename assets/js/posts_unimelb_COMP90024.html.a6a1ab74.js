"use strict";(self.webpackChunkpersonalweb=self.webpackChunkpersonalweb||[]).push([[9679],{6262:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,i]of t)a[e]=i;return a}},5726:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>r,data:()=>o});var i=a(641);const s=a.p+"assets/img/Amdhal_vs_Gustafsons_Law.a70e6e87.png",n={},r=(0,a(6262).A)(n,[["render",function(e,t){return(0,i.uX)(),(0,i.CE)("div",null,t[0]||(t[0]=[(0,i.Fv)('<h1 id="cluster-and-cloud-computing-comp90024" tabindex="-1"><a class="header-anchor" href="#cluster-and-cloud-computing-comp90024"><span>Cluster and Cloud Computing (COMP90024)</span></a></h1><h2 id="week-1" tabindex="-1"><a class="header-anchor" href="#week-1"><span>Week 1</span></a></h2><h3 id="cloud-characteristics" tabindex="-1"><a class="header-anchor" href="#cloud-characteristics"><span>Cloud Characteristics</span></a></h3><p>– On-demand self-service . A consumer can provision computing capabilities as needed without requiring human interaction with each service provider. – Networked access . Capabilities are available over the network and accessed through standard mechanisms that promote use by heterogeneous client platforms.</p><ul><li>Resource pooling . The provider&#39;s computing resources are pooled to serve multiple consumers using a multi-tenant model potentially with different physical and virtual resources that can be dynamically assigned and reassigned according to consumer demand. – Rapid elasticity . Capabilities can be elastically provisioned and released, in some cases automatically, to scale rapidly upon demand. – Measured service . Cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service.</li></ul><h3 id="grid-computing" tabindex="-1"><a class="header-anchor" href="#grid-computing"><span>Grid Computing</span></a></h3><h2 id="week-2" tabindex="-1"><a class="header-anchor" href="#week-2"><span>Week 2</span></a></h2><h3 id="horizontal-and-vertical-scaling" tabindex="-1"><a class="header-anchor" href="#horizontal-and-vertical-scaling"><span>Horizontal and Vertical Scaling</span></a></h3><ul><li>Horizontal scaling refers to adding more resources to a system, easy to add more, cost not so high.</li><li>Vertical scaling refers to increasing the resources of a system, more complex, cost high.</li></ul><figure><img src="'+s+'" alt="Amdhal vs. Gustafson&#39;s Law" tabindex="0" loading="lazy"><figcaption>Amdhal vs. Gustafson&#39;s Law</figcaption></figure><h3 id="categories-of-flynn-s-taxonomy" tabindex="-1"><a class="header-anchor" href="#categories-of-flynn-s-taxonomy"><span>Categories of Flynn&#39;s Taxonomy</span></a></h3><table><thead><tr><th>Type</th><th>Full Name</th><th>Instruction Stream</th><th>Data Stream</th><th>Example</th></tr></thead><tbody><tr><td><strong>SISD</strong></td><td>Single Instruction, Single Data</td><td>Single</td><td>Single</td><td>Traditional single-core CPU</td></tr><tr><td><strong>SIMD</strong></td><td>Single Instruction, Multiple Data</td><td>Single</td><td>Multiple</td><td>GPU, vector processors</td></tr><tr><td><strong>MISD</strong></td><td>Multiple Instruction, Single Data</td><td>Multiple</td><td>Single</td><td>Fault-tolerant systems (rare)</td></tr><tr><td><strong>MIMD</strong></td><td>Multiple Instruction, Multiple Data</td><td>Multiple</td><td>Multiple</td><td>Multi-core CPUs, distributed systems</td></tr></tbody></table><hr><h3 id="approaches-for-parallelism-where-and-how" tabindex="-1"><a class="header-anchor" href="#approaches-for-parallelism-where-and-how"><span>Approaches for Parallelism (where and how)</span></a></h3><p>– Explicit (openMP / MPI) vs Implicit parallelism – Hardware – Operating System – Software/Applications – Some or all of these</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>Message Passing Interface (MPI) is a standardized and portable message-passing system designed to function on a wide range of parallel computers.</p></div><h3 id="erroneous-assumptions-of-distributed-systems" tabindex="-1"><a class="header-anchor" href="#erroneous-assumptions-of-distributed-systems"><span>Erroneous Assumptions of Distributed Systems</span></a></h3><ol><li>The network is reliable</li><li>Latency is zero</li><li>Bandwidth is infinite</li><li>The network is secure</li><li>Topology doesn&#39;t change</li><li>There is one administrator</li><li>Transport cost is zero</li><li>The network is homogeneous</li><li>Time is ubiquitous</li></ol>',18)]))}]]),o=JSON.parse('{"path":"/posts/unimelb/COMP90024.html","title":"Cluster and Cloud Computing (COMP90024)","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2025-03-02T00:00:00.000Z","category":["Learning Records"],"tag":["Unimelb"],"description":"Cluster and Cloud Computing (COMP90024) Week 1 Cloud Characteristics – On-demand self-service . A consumer can provision computing capabilities as needed without requiring human...","head":[["meta",{"property":"og:url","content":"https://crc011220.github.io/personalweb/personalweb/posts/unimelb/COMP90024.html"}],["meta",{"property":"og:site_name","content":"Richard Chen"}],["meta",{"property":"og:title","content":"Cluster and Cloud Computing (COMP90024)"}],["meta",{"property":"og:description","content":"Cluster and Cloud Computing (COMP90024) Week 1 Cloud Characteristics – On-demand self-service . A consumer can provision computing capabilities as needed without requiring human..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-16T10:48:16.000Z"}],["meta",{"property":"article:tag","content":"Unimelb"}],["meta",{"property":"article:published_time","content":"2025-03-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-16T10:48:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cluster and Cloud Computing (COMP90024)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-02T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-16T10:48:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Richard Chen\\"}]}"]]},"headers":[{"level":2,"title":"Week 1","slug":"week-1","link":"#week-1","children":[{"level":3,"title":"Cloud Characteristics","slug":"cloud-characteristics","link":"#cloud-characteristics","children":[]},{"level":3,"title":"Grid Computing","slug":"grid-computing","link":"#grid-computing","children":[]}]},{"level":2,"title":"Week 2","slug":"week-2","link":"#week-2","children":[{"level":3,"title":"Horizontal and Vertical Scaling","slug":"horizontal-and-vertical-scaling","link":"#horizontal-and-vertical-scaling","children":[]},{"level":3,"title":"Categories of Flynn\'s Taxonomy","slug":"categories-of-flynn-s-taxonomy","link":"#categories-of-flynn-s-taxonomy","children":[]},{"level":3,"title":"Approaches for Parallelism (where and how)","slug":"approaches-for-parallelism-where-and-how","link":"#approaches-for-parallelism-where-and-how","children":[]},{"level":3,"title":"Erroneous Assumptions of Distributed Systems","slug":"erroneous-assumptions-of-distributed-systems","link":"#erroneous-assumptions-of-distributed-systems","children":[]}]}],"git":{"createdTime":1742122096000,"updatedTime":1742122096000,"contributors":[{"name":"Ruochen Chen","email":"ruocchen1220@gmail.com","commits":1}]},"readingTime":{"minutes":1.14,"words":342},"filePathRelative":"posts/unimelb/COMP90024.md","localizedDate":"March 2, 2025","excerpt":"\\n<h2>Week 1</h2>\\n<h3>Cloud Characteristics</h3>\\n<p>– On-demand self-service . A consumer can provision computing\\ncapabilities as needed without requiring human interaction with\\neach service provider.\\n– Networked access . Capabilities are available over the network and\\naccessed through standard mechanisms that promote use by\\nheterogeneous client platforms.</p>","autoDesc":true}')}}]);